{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Networking from '../../Network/RCTNetworking';\nimport HMRClient from '../../Utilities/HMRClient';\nimport LoadingView from '../../Utilities/LoadingView';\nimport getDevServer from './getDevServer';\nvar pendingRequests = 0;\nvar cachedPromisesByUrl = new Map();\nfunction asyncRequest(url) {\n  var id = null;\n  var responseText = null;\n  var headers = null;\n  var dataListener;\n  var completeListener;\n  var responseListener;\n  var incrementalDataListener;\n  return new Promise(function (resolve, reject) {\n    dataListener = Networking.addListener('didReceiveNetworkData', function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        requestId = _ref2[0],\n        response = _ref2[1];\n      if (requestId === id) {\n        responseText = response;\n      }\n    });\n    incrementalDataListener = Networking.addListener('didReceiveNetworkIncrementalData', function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        requestId = _ref4[0],\n        data = _ref4[1];\n      if (requestId === id) {\n        if (responseText != null) {\n          responseText += data;\n        } else {\n          responseText = data;\n        }\n      }\n    });\n    responseListener = Networking.addListener('didReceiveNetworkResponse', function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 3),\n        requestId = _ref6[0],\n        status = _ref6[1],\n        responseHeaders = _ref6[2];\n      if (requestId === id) {\n        headers = responseHeaders;\n      }\n    });\n    completeListener = Networking.addListener('didCompleteNetworkResponse', function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n        requestId = _ref8[0],\n        error = _ref8[1];\n      if (requestId === id) {\n        if (error) {\n          reject(error);\n        } else {\n          resolve({\n            body: responseText,\n            headers: headers\n          });\n        }\n      }\n    });\n    Networking.sendRequest('GET', 'asyncRequest', url, {}, '', 'text', true, 0, function (requestId) {\n      id = requestId;\n    }, true);\n  }).finally(function () {\n    var _dataListener, _completeListener, _responseListener, _incrementalDataListe;\n    (_dataListener = dataListener) == null ? void 0 : _dataListener.remove();\n    (_completeListener = completeListener) == null ? void 0 : _completeListener.remove();\n    (_responseListener = responseListener) == null ? void 0 : _responseListener.remove();\n    (_incrementalDataListe = incrementalDataListener) == null ? void 0 : _incrementalDataListe.remove();\n  });\n}\nfunction buildUrlForBundle(bundlePathAndQuery) {\n  var _getDevServer = getDevServer(),\n    serverUrl = _getDevServer.url;\n  return serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '');\n}\nmodule.exports = function (bundlePathAndQuery) {\n  var requestUrl = buildUrlForBundle(bundlePathAndQuery);\n  var loadPromise = cachedPromisesByUrl.get(requestUrl);\n  if (loadPromise) {\n    return loadPromise;\n  }\n  LoadingView.showMessage('Downloading...', 'load');\n  ++pendingRequests;\n  loadPromise = asyncRequest(requestUrl).then(function (_ref9) {\n    var body = _ref9.body,\n      headers = _ref9.headers;\n    if (headers['Content-Type'] != null && headers['Content-Type'].indexOf('application/json') >= 0) {\n      throw new Error(JSON.parse(body).message || `Unknown error fetching '${bundlePathAndQuery}'`);\n    }\n    HMRClient.registerBundle(requestUrl);\n    if (global.globalEvalWithSourceUrl) {\n      global.globalEvalWithSourceUrl(body, requestUrl);\n    } else {\n      eval(body);\n    }\n  }).catch(function (e) {\n    cachedPromisesByUrl.delete(requestUrl);\n    throw e;\n  }).finally(function () {\n    if (! --pendingRequests) {\n      LoadingView.hide();\n    }\n  });\n  cachedPromisesByUrl.set(requestUrl, loadPromise);\n  return loadPromise;\n};","map":{"version":3,"names":["Networking","HMRClient","LoadingView","getDevServer","pendingRequests","cachedPromisesByUrl","Map","asyncRequest","url","id","responseText","headers","dataListener","completeListener","responseListener","incrementalDataListener","Promise","resolve","reject","addListener","_ref","_ref2","_slicedToArray","requestId","response","_ref3","_ref4","data","_ref5","_ref6","status","responseHeaders","_ref7","_ref8","error","body","sendRequest","finally","_dataListener","_completeListener","_responseListener","_incrementalDataListe","remove","buildUrlForBundle","bundlePathAndQuery","_getDevServer","serverUrl","replace","module","exports","requestUrl","loadPromise","get","showMessage","then","_ref9","indexOf","Error","JSON","parse","message","registerBundle","global","globalEvalWithSourceUrl","eval","catch","e","delete","hide","set"],"sources":["C:/Users/dudug/OneDrive/Área de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Core/Devtools/loadBundleFromServer.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n * @oncall react_native\n */\n\nimport Networking from '../../Network/RCTNetworking';\nimport HMRClient from '../../Utilities/HMRClient';\nimport LoadingView from '../../Utilities/LoadingView';\nimport getDevServer from './getDevServer';\n\ndeclare var global: {globalEvalWithSourceUrl?: (string, string) => mixed, ...};\n\nlet pendingRequests = 0;\n\nconst cachedPromisesByUrl = new Map<string, Promise<void>>();\n\nfunction asyncRequest(\n  url: string,\n): Promise<{body: string, headers: {[string]: string}}> {\n  let id = null;\n  let responseText = null;\n  let headers = null;\n  let dataListener;\n  let completeListener;\n  let responseListener;\n  let incrementalDataListener;\n  return new Promise<{body: string, headers: {[string]: string}}>(\n    (resolve, reject) => {\n      dataListener = Networking.addListener(\n        'didReceiveNetworkData',\n        ([requestId, response]) => {\n          if (requestId === id) {\n            responseText = response;\n          }\n        },\n      );\n      incrementalDataListener = Networking.addListener(\n        'didReceiveNetworkIncrementalData',\n        ([requestId, data]) => {\n          if (requestId === id) {\n            if (responseText != null) {\n              responseText += data;\n            } else {\n              responseText = data;\n            }\n          }\n        },\n      );\n      responseListener = Networking.addListener(\n        'didReceiveNetworkResponse',\n        ([requestId, status, responseHeaders]) => {\n          if (requestId === id) {\n            headers = responseHeaders;\n          }\n        },\n      );\n      completeListener = Networking.addListener(\n        'didCompleteNetworkResponse',\n        ([requestId, error]) => {\n          if (requestId === id) {\n            if (error) {\n              reject(error);\n            } else {\n              //$FlowFixMe[incompatible-call]\n              resolve({body: responseText, headers});\n            }\n          }\n        },\n      );\n      Networking.sendRequest(\n        'GET',\n        'asyncRequest',\n        url,\n        {},\n        '',\n        'text',\n        true,\n        0,\n        requestId => {\n          id = requestId;\n        },\n        true,\n      );\n    },\n  ).finally(() => {\n    dataListener?.remove();\n    completeListener?.remove();\n    responseListener?.remove();\n    incrementalDataListener?.remove();\n  });\n}\n\nfunction buildUrlForBundle(bundlePathAndQuery: string) {\n  const {url: serverUrl} = getDevServer();\n  return (\n    serverUrl.replace(/\\/+$/, '') + '/' + bundlePathAndQuery.replace(/^\\/+/, '')\n  );\n}\n\nmodule.exports = function (bundlePathAndQuery: string): Promise<void> {\n  const requestUrl = buildUrlForBundle(bundlePathAndQuery);\n  let loadPromise = cachedPromisesByUrl.get(requestUrl);\n\n  if (loadPromise) {\n    return loadPromise;\n  }\n  LoadingView.showMessage('Downloading...', 'load');\n  ++pendingRequests;\n\n  loadPromise = asyncRequest(requestUrl)\n    .then<void>(({body, headers}) => {\n      if (\n        headers['Content-Type'] != null &&\n        headers['Content-Type'].indexOf('application/json') >= 0\n      ) {\n        // Errors are returned as JSON.\n        throw new Error(\n          JSON.parse(body).message ||\n            `Unknown error fetching '${bundlePathAndQuery}'`,\n        );\n      }\n\n      HMRClient.registerBundle(requestUrl);\n\n      // Some engines do not support `sourceURL` as a comment. We expose a\n      // `globalEvalWithSourceUrl` function to handle updates in that case.\n      if (global.globalEvalWithSourceUrl) {\n        global.globalEvalWithSourceUrl(body, requestUrl);\n      } else {\n        // eslint-disable-next-line no-eval\n        eval(body);\n      }\n    })\n    .catch<void>(e => {\n      cachedPromisesByUrl.delete(requestUrl);\n      throw e;\n    })\n    .finally(() => {\n      if (!--pendingRequests) {\n        LoadingView.hide();\n      }\n    });\n\n  cachedPromisesByUrl.set(requestUrl, loadPromise);\n  return loadPromise;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}