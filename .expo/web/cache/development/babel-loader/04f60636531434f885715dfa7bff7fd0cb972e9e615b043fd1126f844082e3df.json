{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\dudug\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos-reactnative\\\\carroai-passageiro-fe-app\\\\node_modules\\\\react-native\\\\Libraries\\\\Components\\\\ScrollView\\\\ScrollViewStickyHeader.js\";\nimport Animated from '../../Animated/Animated';\nimport { isPublicInstance as isFabricPublicInstance } from '../../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport * as React from 'react';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar ScrollViewStickyHeaderWithForwardedRef = React.forwardRef(function ScrollViewStickyHeader(props, forwardedRef) {\n  var inverted = props.inverted,\n    scrollViewHeight = props.scrollViewHeight,\n    hiddenOnScroll = props.hiddenOnScroll,\n    scrollAnimatedValue = props.scrollAnimatedValue,\n    _nextHeaderLayoutY = props.nextHeaderLayoutY;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    measured = _useState2[0],\n    setMeasured = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    layoutY = _useState4[0],\n    setLayoutY = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    layoutHeight = _useState6[0],\n    setLayoutHeight = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    translateY = _useState8[0],\n    setTranslateY = _useState8[1];\n  var _useState9 = useState(_nextHeaderLayoutY),\n    _useState10 = _slicedToArray(_useState9, 2),\n    nextHeaderLayoutY = _useState10[0],\n    setNextHeaderLayoutY = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    isFabric = _useState12[0],\n    setIsFabric = _useState12[1];\n  var callbackRef = useCallback(function (ref) {\n    if (ref == null) {\n      return;\n    }\n    ref.setNextHeaderY = setNextHeaderLayoutY;\n    setIsFabric(isFabricPublicInstance(ref));\n  }, []);\n  var ref = useMergeRefs(callbackRef, forwardedRef);\n  var offset = useMemo(function () {\n    return hiddenOnScroll === true ? Animated.diffClamp(scrollAnimatedValue.interpolate({\n      extrapolateLeft: 'clamp',\n      inputRange: [layoutY, layoutY + 1],\n      outputRange: [0, 1]\n    }).interpolate({\n      inputRange: [0, 1],\n      outputRange: [0, -1]\n    }), -layoutHeight, 0) : null;\n  }, [scrollAnimatedValue, layoutHeight, layoutY, hiddenOnScroll]);\n  var _useState13 = useState(function () {\n      var inputRange = [-1, 0];\n      var outputRange = [0, 0];\n      var initialTranslateY = scrollAnimatedValue.interpolate({\n        inputRange: inputRange,\n        outputRange: outputRange\n      });\n      if (offset != null) {\n        return Animated.add(initialTranslateY, offset);\n      }\n      return initialTranslateY;\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    animatedTranslateY = _useState14[0],\n    setAnimatedTranslateY = _useState14[1];\n  var haveReceivedInitialZeroTranslateY = useRef(true);\n  var translateYDebounceTimer = useRef(null);\n  useEffect(function () {\n    if (translateY !== 0 && translateY != null) {\n      haveReceivedInitialZeroTranslateY.current = false;\n    }\n  }, [translateY]);\n  var animatedValueListener = useCallback(function (_ref) {\n    var value = _ref.value;\n    var debounceTimeout = Platform.OS === 'android' ? 15 : 64;\n    if (value === 0 && !haveReceivedInitialZeroTranslateY.current) {\n      haveReceivedInitialZeroTranslateY.current = true;\n      return;\n    }\n    if (translateYDebounceTimer.current != null) {\n      clearTimeout(translateYDebounceTimer.current);\n    }\n    translateYDebounceTimer.current = setTimeout(function () {\n      return setTranslateY(value);\n    }, debounceTimeout);\n  }, []);\n  useEffect(function () {\n    var inputRange = [-1, 0];\n    var outputRange = [0, 0];\n    if (measured) {\n      if (inverted === true) {\n        if (scrollViewHeight != null) {\n          var stickStartPoint = layoutY + layoutHeight - scrollViewHeight;\n          if (stickStartPoint > 0) {\n            inputRange.push(stickStartPoint);\n            outputRange.push(0);\n            inputRange.push(stickStartPoint + 1);\n            outputRange.push(1);\n            var collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;\n            if (collisionPoint > stickStartPoint) {\n              inputRange.push(collisionPoint, collisionPoint + 1);\n              outputRange.push(collisionPoint - stickStartPoint, collisionPoint - stickStartPoint);\n            }\n          }\n        }\n      } else {\n        inputRange.push(layoutY);\n        outputRange.push(0);\n        var _collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;\n        if (_collisionPoint >= layoutY) {\n          inputRange.push(_collisionPoint, _collisionPoint + 1);\n          outputRange.push(_collisionPoint - layoutY, _collisionPoint - layoutY);\n        } else {\n          inputRange.push(layoutY + 1);\n          outputRange.push(1);\n        }\n      }\n    }\n    var newAnimatedTranslateY = scrollAnimatedValue.interpolate({\n      inputRange: inputRange,\n      outputRange: outputRange\n    });\n    if (offset != null) {\n      newAnimatedTranslateY = Animated.add(newAnimatedTranslateY, offset);\n    }\n    var animatedListenerId;\n    if (isFabric) {\n      animatedListenerId = newAnimatedTranslateY.addListener(animatedValueListener);\n    }\n    setAnimatedTranslateY(newAnimatedTranslateY);\n    return function () {\n      if (animatedListenerId) {\n        newAnimatedTranslateY.removeListener(animatedListenerId);\n      }\n      if (translateYDebounceTimer.current != null) {\n        clearTimeout(translateYDebounceTimer.current);\n      }\n    };\n  }, [nextHeaderLayoutY, measured, layoutHeight, layoutY, scrollViewHeight, scrollAnimatedValue, inverted, offset, animatedValueListener, isFabric]);\n  var _onLayout = function _onLayout(event) {\n    setLayoutY(event.nativeEvent.layout.y);\n    setLayoutHeight(event.nativeEvent.layout.height);\n    setMeasured(true);\n    props.onLayout(event);\n    var child = React.Children.only(props.children);\n    if (child.props.onLayout) {\n      child.props.onLayout(event);\n    }\n  };\n  var child = React.Children.only(props.children);\n  return _jsxDEV(Animated.View, {\n    collapsable: false,\n    nativeID: props.nativeID,\n    onLayout: _onLayout,\n    ref: ref,\n    style: [child.props.style, styles.header, {\n      transform: [{\n        translateY: animatedTranslateY\n      }]\n    }],\n    children: React.cloneElement(child, {\n      style: styles.fill,\n      onLayout: undefined\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n});\nvar styles = StyleSheet.create({\n  header: {\n    zIndex: 10,\n    position: 'relative'\n  },\n  fill: {\n    flex: 1\n  }\n});\nexport default ScrollViewStickyHeaderWithForwardedRef;","map":{"version":3,"names":["Animated","isPublicInstance","isFabricPublicInstance","StyleSheet","Platform","useMergeRefs","React","useCallback","useEffect","useMemo","useRef","useState","jsxDEV","_jsxDEV","ScrollViewStickyHeaderWithForwardedRef","forwardRef","ScrollViewStickyHeader","props","forwardedRef","inverted","scrollViewHeight","hiddenOnScroll","scrollAnimatedValue","_nextHeaderLayoutY","nextHeaderLayoutY","_useState","_useState2","_slicedToArray","measured","setMeasured","_useState3","_useState4","layoutY","setLayoutY","_useState5","_useState6","layoutHeight","setLayoutHeight","_useState7","_useState8","translateY","setTranslateY","_useState9","_useState10","setNextHeaderLayoutY","_useState11","_useState12","isFabric","setIsFabric","callbackRef","ref","setNextHeaderY","offset","diffClamp","interpolate","extrapolateLeft","inputRange","outputRange","_useState13","initialTranslateY","add","_useState14","animatedTranslateY","setAnimatedTranslateY","haveReceivedInitialZeroTranslateY","translateYDebounceTimer","current","animatedValueListener","_ref","value","debounceTimeout","OS","clearTimeout","setTimeout","stickStartPoint","push","collisionPoint","newAnimatedTranslateY","animatedListenerId","addListener","removeListener","_onLayout","event","nativeEvent","layout","y","height","onLayout","child","Children","only","children","View","collapsable","nativeID","style","styles","header","transform","cloneElement","fill","undefined","fileName","_jsxFileName","lineNumber","columnNumber","create","zIndex","position","flex"],"sources":["C:/Users/dudug/OneDrive/√Årea de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Components/ScrollView/ScrollViewStickyHeader.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {LayoutEvent} from '../../Types/CoreEventTypes';\n\nimport Animated from '../../Animated/Animated';\nimport {isPublicInstance as isFabricPublicInstance} from '../../ReactNative/ReactFabricPublicInstance/ReactFabricPublicInstanceUtils';\nimport StyleSheet from '../../StyleSheet/StyleSheet';\nimport Platform from '../../Utilities/Platform';\nimport useMergeRefs from '../../Utilities/useMergeRefs';\nimport * as React from 'react';\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react';\n\nexport type Props = $ReadOnly<{\n  children?: React.Element<$FlowFixMe>,\n  nextHeaderLayoutY: ?number,\n  onLayout: (event: LayoutEvent) => void,\n  scrollAnimatedValue: Animated.Value,\n  // Will cause sticky headers to stick at the bottom of the ScrollView instead\n  // of the top.\n  inverted: ?boolean,\n  // The height of the parent ScrollView. Currently only set when inverted.\n  scrollViewHeight: ?number,\n  nativeID?: ?string,\n  hiddenOnScroll?: ?boolean,\n}>;\n\ntype Instance = {\n  ...React.ElementRef<typeof Animated.View>,\n  setNextHeaderY: number => void,\n  ...\n};\n\nconst ScrollViewStickyHeaderWithForwardedRef: React.AbstractComponent<\n  Props,\n  Instance,\n> = React.forwardRef(function ScrollViewStickyHeader(props, forwardedRef) {\n  const {\n    inverted,\n    scrollViewHeight,\n    hiddenOnScroll,\n    scrollAnimatedValue,\n    nextHeaderLayoutY: _nextHeaderLayoutY,\n  } = props;\n\n  const [measured, setMeasured] = useState<boolean>(false);\n  const [layoutY, setLayoutY] = useState<number>(0);\n  const [layoutHeight, setLayoutHeight] = useState<number>(0);\n  const [translateY, setTranslateY] = useState<?number>(null);\n  const [nextHeaderLayoutY, setNextHeaderLayoutY] =\n    useState<?number>(_nextHeaderLayoutY);\n  const [isFabric, setIsFabric] = useState<boolean>(false);\n\n  const callbackRef = useCallback((ref: Instance | null): void => {\n    if (ref == null) {\n      return;\n    }\n    ref.setNextHeaderY = setNextHeaderLayoutY;\n    setIsFabric(isFabricPublicInstance(ref));\n  }, []);\n  const ref: (React.ElementRef<typeof Animated.View> | null) => void =\n    // $FlowFixMe[incompatible-type] - Ref is mutated by `callbackRef`.\n    // $FlowFixMe[incompatible-call]\n    useMergeRefs<Instance | null>(callbackRef, forwardedRef);\n\n  const offset = useMemo(\n    () =>\n      hiddenOnScroll === true\n        ? Animated.diffClamp(\n            scrollAnimatedValue\n              .interpolate({\n                extrapolateLeft: 'clamp',\n                inputRange: [layoutY, layoutY + 1],\n                outputRange: ([0, 1]: Array<number>),\n              })\n              .interpolate({\n                inputRange: [0, 1],\n                outputRange: ([0, -1]: Array<number>),\n              }),\n            -layoutHeight,\n            0,\n          )\n        : null,\n    [scrollAnimatedValue, layoutHeight, layoutY, hiddenOnScroll],\n  );\n\n  const [animatedTranslateY, setAnimatedTranslateY] = useState<Animated.Node>(\n    () => {\n      const inputRange: Array<number> = [-1, 0];\n      const outputRange: Array<number> = [0, 0];\n      const initialTranslateY = scrollAnimatedValue.interpolate({\n        inputRange,\n        outputRange,\n      });\n\n      if (offset != null) {\n        return Animated.add(initialTranslateY, offset);\n      }\n      return initialTranslateY;\n    },\n  );\n\n  const haveReceivedInitialZeroTranslateY = useRef<boolean>(true);\n  const translateYDebounceTimer = useRef<?TimeoutID>(null);\n\n  useEffect(() => {\n    if (translateY !== 0 && translateY != null) {\n      haveReceivedInitialZeroTranslateY.current = false;\n    }\n  }, [translateY]);\n\n  // This is called whenever the (Interpolated) Animated Value\n  // updates, which is several times per frame during scrolling.\n  // To ensure that the Fabric ShadowTree has the most recent\n  // translate style of this node, we debounce the value and then\n  // pass it through to the underlying node during render.\n  // This is:\n  // 1. Only an issue in Fabric.\n  // 2. Worse in Android than iOS. In Android, but not iOS, you\n  //    can touch and move your finger slightly and still trigger\n  //    a \"tap\" event. In iOS, moving will cancel the tap in\n  //    both Fabric and non-Fabric. On Android when you move\n  //    your finger, the hit-detection moves from the Android\n  //    platform to JS, so we need the ShadowTree to have knowledge\n  //    of the current position.\n  const animatedValueListener = useCallback(({value}: $FlowFixMe) => {\n    const debounceTimeout: number = Platform.OS === 'android' ? 15 : 64;\n    // When the AnimatedInterpolation is recreated, it always initializes\n    // to a value of zero and emits a value change of 0 to its listeners.\n    if (value === 0 && !haveReceivedInitialZeroTranslateY.current) {\n      haveReceivedInitialZeroTranslateY.current = true;\n      return;\n    }\n    if (translateYDebounceTimer.current != null) {\n      clearTimeout(translateYDebounceTimer.current);\n    }\n    translateYDebounceTimer.current = setTimeout(\n      () => setTranslateY(value),\n      debounceTimeout,\n    );\n  }, []);\n\n  useEffect(() => {\n    const inputRange: Array<number> = [-1, 0];\n    const outputRange: Array<number> = [0, 0];\n\n    if (measured) {\n      if (inverted === true) {\n        // The interpolation looks like:\n        // - Negative scroll: no translation\n        // - `stickStartPoint` is the point at which the header will start sticking.\n        //   It is calculated using the ScrollView viewport height so it is a the bottom.\n        // - Headers that are in the initial viewport will never stick, `stickStartPoint`\n        //   will be negative.\n        // - From 0 to `stickStartPoint` no translation. This will cause the header\n        //   to scroll normally until it reaches the top of the scroll view.\n        // - From `stickStartPoint` to when the next header y hits the bottom edge of the header: translate\n        //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n        // - Past the collision with the next header y: no more translation. This will cause the\n        //   header to continue scrolling up and make room for the next sticky header.\n        //   In the case that there is no next header just translate equally to\n        //   scroll indefinitely.\n        if (scrollViewHeight != null) {\n          const stickStartPoint = layoutY + layoutHeight - scrollViewHeight;\n          if (stickStartPoint > 0) {\n            inputRange.push(stickStartPoint);\n            outputRange.push(0);\n            inputRange.push(stickStartPoint + 1);\n            outputRange.push(1);\n            // If the next sticky header has not loaded yet (probably windowing) or is the last\n            // we can just keep it sticked forever.\n            const collisionPoint =\n              (nextHeaderLayoutY || 0) - layoutHeight - scrollViewHeight;\n            if (collisionPoint > stickStartPoint) {\n              inputRange.push(collisionPoint, collisionPoint + 1);\n              outputRange.push(\n                collisionPoint - stickStartPoint,\n                collisionPoint - stickStartPoint,\n              );\n            }\n          }\n        }\n      } else {\n        // The interpolation looks like:\n        // - Negative scroll: no translation\n        // - From 0 to the y of the header: no translation. This will cause the header\n        //   to scroll normally until it reaches the top of the scroll view.\n        // - From header y to when the next header y hits the bottom edge of the header: translate\n        //   equally to scroll. This will cause the header to stay at the top of the scroll view.\n        // - Past the collision with the next header y: no more translation. This will cause the\n        //   header to continue scrolling up and make room for the next sticky header.\n        //   In the case that there is no next header just translate equally to\n        //   scroll indefinitely.\n        inputRange.push(layoutY);\n        outputRange.push(0);\n        // If the next sticky header has not loaded yet (probably windowing) or is the last\n        // we can just keep it sticked forever.\n        const collisionPoint = (nextHeaderLayoutY || 0) - layoutHeight;\n        if (collisionPoint >= layoutY) {\n          inputRange.push(collisionPoint, collisionPoint + 1);\n          outputRange.push(collisionPoint - layoutY, collisionPoint - layoutY);\n        } else {\n          inputRange.push(layoutY + 1);\n          outputRange.push(1);\n        }\n      }\n    }\n\n    let newAnimatedTranslateY: Animated.Node = scrollAnimatedValue.interpolate({\n      inputRange,\n      outputRange,\n    });\n\n    if (offset != null) {\n      newAnimatedTranslateY = Animated.add(newAnimatedTranslateY, offset);\n    }\n\n    // add the event listener\n    let animatedListenerId;\n    if (isFabric) {\n      animatedListenerId = newAnimatedTranslateY.addListener(\n        animatedValueListener,\n      );\n    }\n\n    setAnimatedTranslateY(newAnimatedTranslateY);\n\n    // clean up the event listener and timer\n    return () => {\n      if (animatedListenerId) {\n        newAnimatedTranslateY.removeListener(animatedListenerId);\n      }\n      if (translateYDebounceTimer.current != null) {\n        clearTimeout(translateYDebounceTimer.current);\n      }\n    };\n  }, [\n    nextHeaderLayoutY,\n    measured,\n    layoutHeight,\n    layoutY,\n    scrollViewHeight,\n    scrollAnimatedValue,\n    inverted,\n    offset,\n    animatedValueListener,\n    isFabric,\n  ]);\n\n  const _onLayout = (event: LayoutEvent) => {\n    setLayoutY(event.nativeEvent.layout.y);\n    setLayoutHeight(event.nativeEvent.layout.height);\n    setMeasured(true);\n\n    props.onLayout(event);\n    const child = React.Children.only<$FlowFixMe>(props.children);\n    if (child.props.onLayout) {\n      child.props.onLayout(event);\n    }\n  };\n\n  const child = React.Children.only<$FlowFixMe>(props.children);\n\n  return (\n    <Animated.View\n      collapsable={false}\n      nativeID={props.nativeID}\n      onLayout={_onLayout}\n      ref={ref}\n      style={[\n        child.props.style,\n        styles.header,\n        {transform: [{translateY: animatedTranslateY}]},\n      ]}>\n      {React.cloneElement(child, {\n        style: styles.fill, // We transfer the child style to the wrapper.\n        onLayout: undefined, // we call this manually through our this._onLayout\n      })}\n    </Animated.View>\n  );\n});\n\nconst styles = StyleSheet.create({\n  header: {\n    zIndex: 10,\n    position: 'relative',\n  },\n  fill: {\n    flex: 1,\n  },\n});\n\nexport default ScrollViewStickyHeaderWithForwardedRef;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}