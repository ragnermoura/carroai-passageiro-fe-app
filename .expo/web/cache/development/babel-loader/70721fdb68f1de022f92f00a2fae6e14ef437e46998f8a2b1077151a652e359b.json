{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessible\", \"accessibilityLabel\", \"accessibilityState\", \"allowFontScaling\", \"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-label\", \"aria-selected\", \"ellipsizeMode\", \"id\", \"nativeID\", \"onLongPress\", \"onPress\", \"onPressIn\", \"onPressOut\", \"onResponderGrant\", \"onResponderMove\", \"onResponderRelease\", \"onResponderTerminate\", \"onResponderTerminationRequest\", \"onStartShouldSetResponder\", \"pressRetentionOffset\", \"suppressHighlighting\"];\nvar _jsxFileName = \"C:\\\\Users\\\\dudug\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos-reactnative\\\\carroai-passageiro-fe-app\\\\node_modules\\\\react-native\\\\Libraries\\\\Text\\\\Text.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport { NativeText, NativeVirtualText } from './TextNativeComponent';\nimport * as React from 'react';\nimport { useContext, useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar Text = React.forwardRef(function (props, forwardedRef) {\n  var _accessibilityState2, _accessibilityState3, _style, _style3, _style4;\n  var accessible = props.accessible,\n    accessibilityLabel = props.accessibilityLabel,\n    accessibilityState = props.accessibilityState,\n    allowFontScaling = props.allowFontScaling,\n    ariaBusy = props['aria-busy'],\n    ariaChecked = props['aria-checked'],\n    ariaDisabled = props['aria-disabled'],\n    ariaExpanded = props['aria-expanded'],\n    ariaLabel = props['aria-label'],\n    ariaSelected = props['aria-selected'],\n    ellipsizeMode = props.ellipsizeMode,\n    id = props.id,\n    nativeID = props.nativeID,\n    onLongPress = props.onLongPress,\n    onPress = props.onPress,\n    _onPressIn = props.onPressIn,\n    _onPressOut = props.onPressOut,\n    _onResponderGrant = props.onResponderGrant,\n    _onResponderMove = props.onResponderMove,\n    _onResponderRelease = props.onResponderRelease,\n    _onResponderTerminate = props.onResponderTerminate,\n    onResponderTerminationRequest = props.onResponderTerminationRequest,\n    onStartShouldSetResponder = props.onStartShouldSetResponder,\n    pressRetentionOffset = props.pressRetentionOffset,\n    suppressHighlighting = props.suppressHighlighting,\n    restProps = _objectWithoutProperties(props, _excluded);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isHighlighted = _useState2[0],\n    setHighlighted = _useState2[1];\n  var _accessibilityState;\n  if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n    _accessibilityState = {\n      busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? void 0 : accessibilityState.busy,\n      checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? void 0 : accessibilityState.checked,\n      disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? void 0 : accessibilityState.disabled,\n      expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? void 0 : accessibilityState.expanded,\n      selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? void 0 : accessibilityState.selected\n    };\n  }\n  var _disabled = restProps.disabled != null ? restProps.disabled : (_accessibilityState2 = _accessibilityState) == null ? void 0 : _accessibilityState2.disabled;\n  var nativeTextAccessibilityState = _disabled !== ((_accessibilityState3 = _accessibilityState) == null ? void 0 : _accessibilityState3.disabled) ? _objectSpread(_objectSpread({}, _accessibilityState), {}, {\n    disabled: _disabled\n  }) : _accessibilityState;\n  var isPressable = (onPress != null || onLongPress != null || onStartShouldSetResponder != null) && _disabled !== true;\n  var initialized = useLazyInitialization(isPressable);\n  var config = useMemo(function () {\n    return initialized ? {\n      disabled: !isPressable,\n      pressRectOffset: pressRetentionOffset,\n      onLongPress: onLongPress,\n      onPress: onPress,\n      onPressIn: function onPressIn(event) {\n        setHighlighted((suppressHighlighting == null || !suppressHighlighting) && Platform.OS === 'ios');\n        _onPressIn == null ? void 0 : _onPressIn(event);\n      },\n      onPressOut: function onPressOut(event) {\n        setHighlighted(false);\n        _onPressOut == null ? void 0 : _onPressOut(event);\n      },\n      onResponderTerminationRequest_DEPRECATED: onResponderTerminationRequest,\n      onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder\n    } : null;\n  }, [initialized, isPressable, pressRetentionOffset, onLongPress, onPress, _onPressIn, _onPressOut, onResponderTerminationRequest, onStartShouldSetResponder, suppressHighlighting]);\n  var eventHandlers = usePressability(config);\n  var eventHandlersForText = useMemo(function () {\n    return eventHandlers == null ? null : {\n      onResponderGrant: function onResponderGrant(event) {\n        eventHandlers.onResponderGrant(event);\n        if (_onResponderGrant != null) {\n          _onResponderGrant(event);\n        }\n      },\n      onResponderMove: function onResponderMove(event) {\n        eventHandlers.onResponderMove(event);\n        if (_onResponderMove != null) {\n          _onResponderMove(event);\n        }\n      },\n      onResponderRelease: function onResponderRelease(event) {\n        eventHandlers.onResponderRelease(event);\n        if (_onResponderRelease != null) {\n          _onResponderRelease(event);\n        }\n      },\n      onResponderTerminate: function onResponderTerminate(event) {\n        eventHandlers.onResponderTerminate(event);\n        if (_onResponderTerminate != null) {\n          _onResponderTerminate(event);\n        }\n      },\n      onClick: eventHandlers.onClick,\n      onResponderTerminationRequest: eventHandlers.onResponderTerminationRequest,\n      onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder\n    };\n  }, [eventHandlers, _onResponderGrant, _onResponderMove, _onResponderRelease, _onResponderTerminate]);\n  var selectionColor = restProps.selectionColor == null ? null : processColor(restProps.selectionColor);\n  var style = restProps.style;\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = [restProps.style, {\n        color: 'magenta'\n      }];\n    }\n  }\n  var numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(`'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`);\n    numberOfLines = 0;\n  }\n  var hasTextAncestor = useContext(TextAncestor);\n  var _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible\n  });\n  style = flattenStyle(style);\n  if (typeof ((_style = style) == null ? void 0 : _style.fontWeight) === 'number') {\n    var _style2;\n    style.fontWeight = (_style2 = style) == null ? void 0 : _style2.fontWeight.toString();\n  }\n  var _selectable = restProps.selectable;\n  if (((_style3 = style) == null ? void 0 : _style3.userSelect) != null) {\n    _selectable = userSelectToSelectableMap[style.userSelect];\n    delete style.userSelect;\n  }\n  if (((_style4 = style) == null ? void 0 : _style4.verticalAlign) != null) {\n    style.textAlignVertical = verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n    delete style.verticalAlign;\n  }\n  var _hasOnPressOrOnLongPress = props.onPress != null || props.onLongPress != null;\n  return hasTextAncestor ? _jsxDEV(NativeVirtualText, _objectSpread(_objectSpread(_objectSpread({}, restProps), eventHandlersForText), {}, {\n    accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n    accessibilityState: _accessibilityState,\n    isHighlighted: isHighlighted,\n    isPressable: isPressable,\n    nativeID: id != null ? id : nativeID,\n    numberOfLines: numberOfLines,\n    ref: forwardedRef,\n    selectable: _selectable,\n    selectionColor: selectionColor,\n    style: style\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 5\n  }, _this) : _jsxDEV(TextAncestor.Provider, {\n    value: true,\n    children: _jsxDEV(NativeText, _objectSpread(_objectSpread(_objectSpread({}, restProps), eventHandlersForText), {}, {\n      accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n      accessibilityState: nativeTextAccessibilityState,\n      accessible: accessible == null && Platform.OS === 'android' ? _hasOnPressOrOnLongPress : _accessible,\n      allowFontScaling: allowFontScaling !== false,\n      disabled: _disabled,\n      ellipsizeMode: ellipsizeMode != null ? ellipsizeMode : 'tail',\n      isHighlighted: isHighlighted,\n      nativeID: id != null ? id : nativeID,\n      numberOfLines: numberOfLines,\n      ref: forwardedRef,\n      selectable: _selectable,\n      selectionColor: selectionColor,\n      style: style\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, _this);\n});\nText.displayName = 'Text';\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\nfunction useLazyInitialization(newValue) {\n  var _useState3 = useState(newValue),\n    _useState4 = _slicedToArray(_useState3, 2),\n    oldValue = _useState4[0],\n    setValue = _useState4[1];\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\nvar userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true\n};\nvar verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center'\n};\nmodule.exports = Text;","map":{"version":3,"names":["PressabilityDebug","usePressability","flattenStyle","processColor","Platform","TextAncestor","NativeText","NativeVirtualText","React","useContext","useMemo","useState","jsxDEV","_jsxDEV","Text","forwardRef","props","forwardedRef","_accessibilityState2","_accessibilityState3","_style","_style3","_style4","accessible","accessibilityLabel","accessibilityState","allowFontScaling","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaLabel","ariaSelected","ellipsizeMode","id","nativeID","onLongPress","onPress","onPressIn","onPressOut","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","pressRetentionOffset","suppressHighlighting","restProps","_objectWithoutProperties","_excluded","_useState","_useState2","_slicedToArray","isHighlighted","setHighlighted","_accessibilityState","busy","checked","disabled","expanded","selected","_disabled","nativeTextAccessibilityState","_objectSpread","isPressable","initialized","useLazyInitialization","config","pressRectOffset","event","OS","onResponderTerminationRequest_DEPRECATED","onStartShouldSetResponder_DEPRECATED","eventHandlers","eventHandlersForText","onClick","selectionColor","style","__DEV__","isEnabled","color","numberOfLines","console","error","hasTextAncestor","_accessible","select","ios","default","fontWeight","_style2","toString","_selectable","selectable","userSelect","userSelectToSelectableMap","verticalAlign","textAlignVertical","verticalAlignToTextAlignVerticalMap","_hasOnPressOrOnLongPress","ref","fileName","_jsxFileName","lineNumber","columnNumber","_this","Provider","value","children","displayName","propTypes","require","TextPropTypes","newValue","_useState3","_useState4","oldValue","setValue","auto","text","none","contain","all","top","bottom","middle","module","exports"],"sources":["C:/Users/dudug/OneDrive/Área de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Text/Text.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {PressEvent} from '../Types/CoreEventTypes';\nimport type {TextProps} from './TextProps';\n\nimport * as PressabilityDebug from '../Pressability/PressabilityDebug';\nimport usePressability from '../Pressability/usePressability';\nimport flattenStyle from '../StyleSheet/flattenStyle';\nimport processColor from '../StyleSheet/processColor';\nimport Platform from '../Utilities/Platform';\nimport TextAncestor from './TextAncestor';\nimport {NativeText, NativeVirtualText} from './TextNativeComponent';\nimport * as React from 'react';\nimport {useContext, useMemo, useState} from 'react';\n\n/**\n * Text is the fundamental component for displaying text.\n *\n * @see https://reactnative.dev/docs/text\n */\nconst Text: React.AbstractComponent<\n  TextProps,\n  React.ElementRef<typeof NativeText | typeof NativeVirtualText>,\n> = React.forwardRef((props: TextProps, forwardedRef) => {\n  const {\n    accessible,\n    accessibilityLabel,\n    accessibilityState,\n    allowFontScaling,\n    'aria-busy': ariaBusy,\n    'aria-checked': ariaChecked,\n    'aria-disabled': ariaDisabled,\n    'aria-expanded': ariaExpanded,\n    'aria-label': ariaLabel,\n    'aria-selected': ariaSelected,\n    ellipsizeMode,\n    id,\n    nativeID,\n    onLongPress,\n    onPress,\n    onPressIn,\n    onPressOut,\n    onResponderGrant,\n    onResponderMove,\n    onResponderRelease,\n    onResponderTerminate,\n    onResponderTerminationRequest,\n    onStartShouldSetResponder,\n    pressRetentionOffset,\n    suppressHighlighting,\n    ...restProps\n  } = props;\n\n  const [isHighlighted, setHighlighted] = useState(false);\n\n  let _accessibilityState;\n  if (\n    accessibilityState != null ||\n    ariaBusy != null ||\n    ariaChecked != null ||\n    ariaDisabled != null ||\n    ariaExpanded != null ||\n    ariaSelected != null\n  ) {\n    _accessibilityState = {\n      busy: ariaBusy ?? accessibilityState?.busy,\n      checked: ariaChecked ?? accessibilityState?.checked,\n      disabled: ariaDisabled ?? accessibilityState?.disabled,\n      expanded: ariaExpanded ?? accessibilityState?.expanded,\n      selected: ariaSelected ?? accessibilityState?.selected,\n    };\n  }\n\n  const _disabled =\n    restProps.disabled != null\n      ? restProps.disabled\n      : _accessibilityState?.disabled;\n\n  const nativeTextAccessibilityState =\n    _disabled !== _accessibilityState?.disabled\n      ? {..._accessibilityState, disabled: _disabled}\n      : _accessibilityState;\n\n  const isPressable =\n    (onPress != null ||\n      onLongPress != null ||\n      onStartShouldSetResponder != null) &&\n    _disabled !== true;\n\n  const initialized = useLazyInitialization(isPressable);\n  const config = useMemo(\n    () =>\n      initialized\n        ? {\n            disabled: !isPressable,\n            pressRectOffset: pressRetentionOffset,\n            onLongPress,\n            onPress,\n            onPressIn(event: PressEvent) {\n              // Updating isHighlighted causes unnecessary re-renders for platforms that don't use it\n              // in the best case, and cause issues with text selection in the worst case. Forcing\n              // the isHighlighted prop to false on all platforms except iOS.\n              setHighlighted(\n                (suppressHighlighting == null || !suppressHighlighting) &&\n                  Platform.OS === 'ios',\n              );\n              onPressIn?.(event);\n            },\n            onPressOut(event: PressEvent) {\n              setHighlighted(false);\n              onPressOut?.(event);\n            },\n            onResponderTerminationRequest_DEPRECATED:\n              onResponderTerminationRequest,\n            onStartShouldSetResponder_DEPRECATED: onStartShouldSetResponder,\n          }\n        : null,\n    [\n      initialized,\n      isPressable,\n      pressRetentionOffset,\n      onLongPress,\n      onPress,\n      onPressIn,\n      onPressOut,\n      onResponderTerminationRequest,\n      onStartShouldSetResponder,\n      suppressHighlighting,\n    ],\n  );\n\n  const eventHandlers = usePressability(config);\n  const eventHandlersForText = useMemo(\n    () =>\n      eventHandlers == null\n        ? null\n        : {\n            onResponderGrant(event: PressEvent) {\n              eventHandlers.onResponderGrant(event);\n              if (onResponderGrant != null) {\n                onResponderGrant(event);\n              }\n            },\n            onResponderMove(event: PressEvent) {\n              eventHandlers.onResponderMove(event);\n              if (onResponderMove != null) {\n                onResponderMove(event);\n              }\n            },\n            onResponderRelease(event: PressEvent) {\n              eventHandlers.onResponderRelease(event);\n              if (onResponderRelease != null) {\n                onResponderRelease(event);\n              }\n            },\n            onResponderTerminate(event: PressEvent) {\n              eventHandlers.onResponderTerminate(event);\n              if (onResponderTerminate != null) {\n                onResponderTerminate(event);\n              }\n            },\n            onClick: eventHandlers.onClick,\n            onResponderTerminationRequest:\n              eventHandlers.onResponderTerminationRequest,\n            onStartShouldSetResponder: eventHandlers.onStartShouldSetResponder,\n          },\n    [\n      eventHandlers,\n      onResponderGrant,\n      onResponderMove,\n      onResponderRelease,\n      onResponderTerminate,\n    ],\n  );\n\n  // TODO: Move this processing to the view configuration.\n  const selectionColor =\n    restProps.selectionColor == null\n      ? null\n      : processColor(restProps.selectionColor);\n\n  let style = restProps.style;\n\n  if (__DEV__) {\n    if (PressabilityDebug.isEnabled() && onPress != null) {\n      style = [restProps.style, {color: 'magenta'}];\n    }\n  }\n\n  let numberOfLines = restProps.numberOfLines;\n  if (numberOfLines != null && !(numberOfLines >= 0)) {\n    console.error(\n      `'numberOfLines' in <Text> must be a non-negative number, received: ${numberOfLines}. The value will be set to 0.`,\n    );\n    numberOfLines = 0;\n  }\n\n  const hasTextAncestor = useContext(TextAncestor);\n\n  const _accessible = Platform.select({\n    ios: accessible !== false,\n    default: accessible,\n  });\n\n  // $FlowFixMe[underconstrained-implicit-instantiation]\n  style = flattenStyle(style);\n\n  if (typeof style?.fontWeight === 'number') {\n    // $FlowFixMe[prop-missing]\n    // $FlowFixMe[cannot-write]\n    style.fontWeight = style?.fontWeight.toString();\n  }\n\n  let _selectable = restProps.selectable;\n  if (style?.userSelect != null) {\n    // $FlowFixMe[invalid-computed-prop]\n    _selectable = userSelectToSelectableMap[style.userSelect];\n    // $FlowFixMe[prop-missing]\n    // $FlowFixMe[cannot-write]\n    delete style.userSelect;\n  }\n\n  if (style?.verticalAlign != null) {\n    // $FlowFixMe[prop-missing]\n    // $FlowFixMe[cannot-write]\n    style.textAlignVertical =\n      // $FlowFixMe[invalid-computed-prop]\n      verticalAlignToTextAlignVerticalMap[style.verticalAlign];\n    // $FlowFixMe[prop-missing]\n    // $FlowFixMe[cannot-write]\n    delete style.verticalAlign;\n  }\n\n  const _hasOnPressOrOnLongPress =\n    props.onPress != null || props.onLongPress != null;\n\n  return hasTextAncestor ? (\n    <NativeVirtualText\n      {...restProps}\n      {...eventHandlersForText}\n      accessibilityLabel={ariaLabel ?? accessibilityLabel}\n      accessibilityState={_accessibilityState}\n      isHighlighted={isHighlighted}\n      isPressable={isPressable}\n      nativeID={id ?? nativeID}\n      numberOfLines={numberOfLines}\n      ref={forwardedRef}\n      selectable={_selectable}\n      selectionColor={selectionColor}\n      style={style}\n    />\n  ) : (\n    <TextAncestor.Provider value={true}>\n      <NativeText\n        {...restProps}\n        {...eventHandlersForText}\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        accessibilityState={nativeTextAccessibilityState}\n        accessible={\n          accessible == null && Platform.OS === 'android'\n            ? _hasOnPressOrOnLongPress\n            : _accessible\n        }\n        allowFontScaling={allowFontScaling !== false}\n        disabled={_disabled}\n        ellipsizeMode={ellipsizeMode ?? 'tail'}\n        isHighlighted={isHighlighted}\n        nativeID={id ?? nativeID}\n        numberOfLines={numberOfLines}\n        ref={forwardedRef}\n        selectable={_selectable}\n        selectionColor={selectionColor}\n        style={style}\n      />\n    </TextAncestor.Provider>\n  );\n});\n\nText.displayName = 'Text';\n\n/**\n * Switch to `deprecated-react-native-prop-types` for compatibility with future\n * releases. This is deprecated and will be removed in the future.\n */\nText.propTypes = require('deprecated-react-native-prop-types').TextPropTypes;\n\n/**\n * Returns false until the first time `newValue` is true, after which this will\n * always return true. This is necessary to lazily initialize `Pressability` so\n * we do not eagerly create one for every pressable `Text` component.\n */\nfunction useLazyInitialization(newValue: boolean): boolean {\n  const [oldValue, setValue] = useState(newValue);\n  if (!oldValue && newValue) {\n    setValue(newValue);\n  }\n  return oldValue;\n}\n\nconst userSelectToSelectableMap = {\n  auto: true,\n  text: true,\n  none: false,\n  contain: true,\n  all: true,\n};\n\nconst verticalAlignToTextAlignVerticalMap = {\n  auto: 'auto',\n  top: 'top',\n  bottom: 'bottom',\n  middle: 'center',\n};\n\nmodule.exports = Text;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}