{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport Platform from '../Utilities/Platform';\nimport NativeAnimatedNonTurboModule from './NativeAnimatedModule';\nimport NativeAnimatedTurboModule from './NativeAnimatedTurboModule';\nimport invariant from 'invariant';\nvar NativeAnimatedModule = NativeAnimatedNonTurboModule != null ? NativeAnimatedNonTurboModule : NativeAnimatedTurboModule;\nvar __nativeAnimatedNodeTagCount = 1;\nvar __nativeAnimationIdCount = 1;\nvar nativeEventEmitter;\nvar waitingForQueuedOperations = new Set();\nvar queueOperations = false;\nvar queue = [];\nvar singleOpQueue = [];\nvar useSingleOpBatching = Platform.OS === 'android' && !!(NativeAnimatedModule != null && NativeAnimatedModule.queueAndExecuteBatchedOperations) && ReactNativeFeatureFlags.animatedShouldUseSingleOp();\nvar flushQueueTimeout = null;\nvar eventListenerGetValueCallbacks = {};\nvar eventListenerAnimationFinishedCallbacks = {};\nvar globalEventEmitterGetValueListener = null;\nvar globalEventEmitterAnimationFinishedListener = null;\nvar nativeOps = useSingleOpBatching ? function () {\n  var apis = ['createAnimatedNode', 'updateAnimatedNodeConfig', 'getValue', 'startListeningToAnimatedNodeValue', 'stopListeningToAnimatedNodeValue', 'connectAnimatedNodes', 'disconnectAnimatedNodes', 'startAnimatingNode', 'stopAnimation', 'setAnimatedNodeValue', 'setAnimatedNodeOffset', 'flattenAnimatedNodeOffset', 'extractAnimatedNodeOffset', 'connectAnimatedNodeToView', 'disconnectAnimatedNodeFromView', 'restoreDefaultValues', 'dropAnimatedNode', 'addAnimatedEventToView', 'removeAnimatedEventFromView', 'addListener', 'removeListener'];\n  return apis.reduce(function (acc, functionName, i) {\n    acc[functionName] = i + 1;\n    return acc;\n  }, {});\n}() : NativeAnimatedModule;\nvar API = {\n  getValue: function getValue(tag, saveValueCallback) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (saveValueCallback) {\n        eventListenerGetValueCallbacks[tag] = saveValueCallback;\n      }\n      API.queueOperation(nativeOps.getValue, tag);\n    } else {\n      API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n    }\n  },\n  setWaitingForIdentifier: function setWaitingForIdentifier(id) {\n    waitingForQueuedOperations.add(id);\n    queueOperations = true;\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() && flushQueueTimeout) {\n      clearTimeout(flushQueueTimeout);\n    }\n  },\n  unsetWaitingForIdentifier: function unsetWaitingForIdentifier(id) {\n    waitingForQueuedOperations.delete(id);\n    if (waitingForQueuedOperations.size === 0) {\n      queueOperations = false;\n      API.disableQueue();\n    }\n  },\n  disableQueue: function disableQueue() {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n      var prevTimeout = flushQueueTimeout;\n      clearImmediate(prevTimeout);\n      flushQueueTimeout = setImmediate(API.flushQueue);\n    } else {\n      API.flushQueue();\n    }\n  },\n  flushQueue: function flushQueue() {\n    invariant(NativeAnimatedModule || process.env.NODE_ENV === 'test', 'Native animated module is not available');\n    flushQueueTimeout = null;\n    if (useSingleOpBatching && singleOpQueue.length === 0) {\n      return;\n    }\n    if (!useSingleOpBatching && queue.length === 0) {\n      return;\n    }\n    if (useSingleOpBatching) {\n      if (!globalEventEmitterGetValueListener || !globalEventEmitterAnimationFinishedListener) {\n        setupGlobalEventEmitterListeners();\n      }\n      NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.queueAndExecuteBatchedOperations == null ? void 0 : NativeAnimatedModule.queueAndExecuteBatchedOperations(singleOpQueue);\n      singleOpQueue.length = 0;\n    } else {\n      Platform.OS === 'android' && (NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.startOperationBatch == null ? void 0 : NativeAnimatedModule.startOperationBatch());\n      for (var q = 0, l = queue.length; q < l; q++) {\n        queue[q]();\n      }\n      queue.length = 0;\n      Platform.OS === 'android' && (NativeAnimatedModule == null ? void 0 : NativeAnimatedModule.finishOperationBatch == null ? void 0 : NativeAnimatedModule.finishOperationBatch());\n    }\n  },\n  queueOperation: function queueOperation(fn) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (useSingleOpBatching) {\n      singleOpQueue.push.apply(singleOpQueue, [fn].concat(args));\n      return;\n    }\n    if (queueOperations || queue.length !== 0) {\n      queue.push(function () {\n        return fn.apply(void 0, args);\n      });\n    } else {\n      fn.apply(void 0, args);\n    }\n  },\n  createAnimatedNode: function createAnimatedNode(tag, config) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n  },\n  updateAnimatedNodeConfig: function updateAnimatedNodeConfig(tag, config) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (nativeOps.updateAnimatedNodeConfig) {\n      API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n    }\n  },\n  startListeningToAnimatedNodeValue: function startListeningToAnimatedNodeValue(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n  },\n  stopListeningToAnimatedNodeValue: function stopListeningToAnimatedNodeValue(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n  },\n  connectAnimatedNodes: function connectAnimatedNodes(parentTag, childTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function disconnectAnimatedNodes(parentTag, childTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n  },\n  startAnimatingNode: function startAnimatingNode(animationId, nodeTag, config, endCallback) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (endCallback) {\n        eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n      }\n      API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config);\n    } else {\n      API.queueOperation(nativeOps.startAnimatingNode, animationId, nodeTag, config, endCallback);\n    }\n  },\n  stopAnimation: function stopAnimation(animationId) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopAnimation, animationId);\n  },\n  setAnimatedNodeValue: function setAnimatedNodeValue(nodeTag, value) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n  },\n  setAnimatedNodeOffset: function setAnimatedNodeOffset(nodeTag, offset) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function flattenAnimatedNodeOffset(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n  },\n  extractAnimatedNodeOffset: function extractAnimatedNodeOffset(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n  },\n  connectAnimatedNodeToView: function connectAnimatedNodeToView(nodeTag, viewTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function disconnectAnimatedNodeFromView(nodeTag, viewTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodeFromView, nodeTag, viewTag);\n  },\n  restoreDefaultValues: function restoreDefaultValues(nodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (nativeOps.restoreDefaultValues != null) {\n      API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n    }\n  },\n  dropAnimatedNode: function dropAnimatedNode(tag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.dropAnimatedNode, tag);\n  },\n  addAnimatedEventToView: function addAnimatedEventToView(viewTag, eventName, eventMapping) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.addAnimatedEventToView, viewTag, eventName, eventMapping);\n  },\n  removeAnimatedEventFromView: function removeAnimatedEventFromView(viewTag, eventName, animatedNodeTag) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.removeAnimatedEventFromView, viewTag, eventName, animatedNodeTag);\n  }\n};\nfunction setupGlobalEventEmitterListeners() {\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleGetValue', function (params) {\n    var tag = params.tag;\n    var callback = eventListenerGetValueCallbacks[tag];\n    if (!callback) {\n      return;\n    }\n    callback(params.value);\n    delete eventListenerGetValueCallbacks[tag];\n  });\n  globalEventEmitterAnimationFinishedListener = RCTDeviceEventEmitter.addListener('onNativeAnimatedModuleAnimationFinished', function (params) {\n    var animationId = params.animationId;\n    var callback = eventListenerAnimationFinishedCallbacks[animationId];\n    if (!callback) {\n      return;\n    }\n    callback(params);\n    delete eventListenerAnimationFinishedCallbacks[animationId];\n  });\n}\nvar SUPPORTED_COLOR_STYLES = {\n  backgroundColor: true,\n  borderBottomColor: true,\n  borderColor: true,\n  borderEndColor: true,\n  borderLeftColor: true,\n  borderRightColor: true,\n  borderStartColor: true,\n  borderTopColor: true,\n  color: true,\n  tintColor: true\n};\nvar SUPPORTED_STYLES = _objectSpread(_objectSpread({}, SUPPORTED_COLOR_STYLES), {}, {\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  elevation: true,\n  opacity: true,\n  transform: true,\n  zIndex: true,\n  shadowOpacity: true,\n  shadowRadius: true,\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true\n});\nvar SUPPORTED_TRANSFORMS = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  rotateZ: true,\n  perspective: true,\n  skewX: true,\n  skewY: true,\n  matrix: ReactNativeFeatureFlags.shouldUseAnimatedObjectForTransform()\n};\nvar SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true\n};\nfunction addWhitelistedStyleProp(prop) {\n  SUPPORTED_STYLES[prop] = true;\n}\nfunction addWhitelistedTransformProp(prop) {\n  SUPPORTED_TRANSFORMS[prop] = true;\n}\nfunction addWhitelistedInterpolationParam(param) {\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\nfunction isSupportedColorStyleProp(prop) {\n  return SUPPORTED_COLOR_STYLES[prop] === true;\n}\nfunction isSupportedStyleProp(prop) {\n  return SUPPORTED_STYLES[prop] === true;\n}\nfunction isSupportedTransformProp(prop) {\n  return SUPPORTED_TRANSFORMS[prop] === true;\n}\nfunction isSupportedInterpolationParam(param) {\n  return SUPPORTED_INTERPOLATION_PARAMS[param] === true;\n}\nfunction validateTransform(configs) {\n  configs.forEach(function (config) {\n    if (!isSupportedTransformProp(config.property)) {\n      throw new Error(`Property '${config.property}' is not supported by native animated module`);\n    }\n  });\n}\nfunction validateStyles(styles) {\n  for (var _key2 in styles) {\n    if (!isSupportedStyleProp(_key2)) {\n      throw new Error(`Style property '${_key2}' is not supported by native animated module`);\n    }\n  }\n}\nfunction validateInterpolation(config) {\n  for (var _key3 in config) {\n    if (!isSupportedInterpolationParam(_key3)) {\n      throw new Error(`Interpolation property '${_key3}' is not supported by native animated module`);\n    }\n  }\n}\nfunction generateNewNodeTag() {\n  return __nativeAnimatedNodeTagCount++;\n}\nfunction generateNewAnimationId() {\n  return __nativeAnimationIdCount++;\n}\nfunction assertNativeAnimatedModule() {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\nvar _warnedMissingNativeAnimated = false;\nfunction shouldUseNativeDriver(config) {\n  if (config.useNativeDriver == null) {\n    console.warn('Animated: `useNativeDriver` was not specified. This is a required ' + 'option and must be explicitly set to `true` or `false`');\n  }\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    if (process.env.NODE_ENV !== 'test') {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn('Animated: `useNativeDriver` is not supported because the native ' + 'animated module is missing. Falling back to JS-based animation. To ' + 'resolve this, add `RCTAnimation` module to this app, or remove ' + '`useNativeDriver`. ' + 'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md');\n        _warnedMissingNativeAnimated = true;\n      }\n    }\n    return false;\n  }\n  return config.useNativeDriver || false;\n}\nfunction transformDataType(value) {\n  if (typeof value !== 'string') {\n    return value;\n  }\n  if (value.endsWith('deg')) {\n    var degrees = parseFloat(value) || 0;\n    return degrees * Math.PI / 180.0;\n  } else if (value.endsWith('rad')) {\n    return parseFloat(value) || 0;\n  } else {\n    return value;\n  }\n}\nexport default {\n  API: API,\n  isSupportedColorStyleProp: isSupportedColorStyleProp,\n  isSupportedStyleProp: isSupportedStyleProp,\n  isSupportedTransformProp: isSupportedTransformProp,\n  isSupportedInterpolationParam: isSupportedInterpolationParam,\n  addWhitelistedStyleProp: addWhitelistedStyleProp,\n  addWhitelistedTransformProp: addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam: addWhitelistedInterpolationParam,\n  validateStyles: validateStyles,\n  validateTransform: validateTransform,\n  validateInterpolation: validateInterpolation,\n  generateNewNodeTag: generateNewNodeTag,\n  generateNewAnimationId: generateNewAnimationId,\n  assertNativeAnimatedModule: assertNativeAnimatedModule,\n  shouldUseNativeDriver: shouldUseNativeDriver,\n  transformDataType: transformDataType,\n  get nativeEventEmitter() {\n    if (!nativeEventEmitter) {\n      nativeEventEmitter = new NativeEventEmitter(Platform.OS !== 'ios' ? null : NativeAnimatedModule);\n    }\n    return nativeEventEmitter;\n  }\n};","map":{"version":3,"names":["NativeEventEmitter","RCTDeviceEventEmitter","ReactNativeFeatureFlags","Platform","NativeAnimatedNonTurboModule","NativeAnimatedTurboModule","invariant","NativeAnimatedModule","__nativeAnimatedNodeTagCount","__nativeAnimationIdCount","nativeEventEmitter","waitingForQueuedOperations","Set","queueOperations","queue","singleOpQueue","useSingleOpBatching","OS","queueAndExecuteBatchedOperations","animatedShouldUseSingleOp","flushQueueTimeout","eventListenerGetValueCallbacks","eventListenerAnimationFinishedCallbacks","globalEventEmitterGetValueListener","globalEventEmitterAnimationFinishedListener","nativeOps","apis","reduce","acc","functionName","i","API","getValue","tag","saveValueCallback","queueOperation","setWaitingForIdentifier","id","add","animatedShouldDebounceQueueFlush","clearTimeout","unsetWaitingForIdentifier","delete","size","disableQueue","prevTimeout","clearImmediate","setImmediate","flushQueue","process","env","NODE_ENV","length","setupGlobalEventEmitterListeners","startOperationBatch","q","l","finishOperationBatch","fn","_len","arguments","args","Array","_key","push","apply","concat","createAnimatedNode","config","updateAnimatedNodeConfig","startListeningToAnimatedNodeValue","stopListeningToAnimatedNodeValue","connectAnimatedNodes","parentTag","childTag","disconnectAnimatedNodes","startAnimatingNode","animationId","nodeTag","endCallback","stopAnimation","setAnimatedNodeValue","value","setAnimatedNodeOffset","offset","flattenAnimatedNodeOffset","extractAnimatedNodeOffset","connectAnimatedNodeToView","viewTag","disconnectAnimatedNodeFromView","restoreDefaultValues","dropAnimatedNode","addAnimatedEventToView","eventName","eventMapping","removeAnimatedEventFromView","animatedNodeTag","addListener","params","callback","SUPPORTED_COLOR_STYLES","backgroundColor","borderBottomColor","borderColor","borderEndColor","borderLeftColor","borderRightColor","borderStartColor","borderTopColor","color","tintColor","SUPPORTED_STYLES","_objectSpread","borderBottomEndRadius","borderBottomLeftRadius","borderBottomRightRadius","borderBottomStartRadius","borderEndEndRadius","borderEndStartRadius","borderRadius","borderTopEndRadius","borderTopLeftRadius","borderTopRightRadius","borderTopStartRadius","borderStartEndRadius","borderStartStartRadius","elevation","opacity","transform","zIndex","shadowOpacity","shadowRadius","scaleX","scaleY","translateX","translateY","SUPPORTED_TRANSFORMS","scale","rotate","rotateX","rotateY","rotateZ","perspective","skewX","skewY","matrix","shouldUseAnimatedObjectForTransform","SUPPORTED_INTERPOLATION_PARAMS","inputRange","outputRange","extrapolate","extrapolateRight","extrapolateLeft","addWhitelistedStyleProp","prop","addWhitelistedTransformProp","addWhitelistedInterpolationParam","param","isSupportedColorStyleProp","isSupportedStyleProp","isSupportedTransformProp","isSupportedInterpolationParam","validateTransform","configs","forEach","property","Error","validateStyles","styles","key","validateInterpolation","generateNewNodeTag","generateNewAnimationId","assertNativeAnimatedModule","_warnedMissingNativeAnimated","shouldUseNativeDriver","useNativeDriver","console","warn","transformDataType","endsWith","degrees","parseFloat","Math","PI"],"sources":["C:/Users/dudug/OneDrive/Área de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Animated/NativeAnimatedHelper.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {EventSubscription} from '../vendor/emitter/EventEmitter';\nimport type {EventConfig} from './AnimatedEvent';\nimport type {AnimationConfig, EndCallback} from './animations/Animation';\nimport type {\n  AnimatedNodeConfig,\n  AnimatingNodeConfig,\n  EventMapping,\n} from './NativeAnimatedModule';\nimport type {InterpolationConfigType} from './nodes/AnimatedInterpolation';\n\nimport NativeEventEmitter from '../EventEmitter/NativeEventEmitter';\nimport RCTDeviceEventEmitter from '../EventEmitter/RCTDeviceEventEmitter';\nimport ReactNativeFeatureFlags from '../ReactNative/ReactNativeFeatureFlags';\nimport Platform from '../Utilities/Platform';\nimport NativeAnimatedNonTurboModule from './NativeAnimatedModule';\nimport NativeAnimatedTurboModule from './NativeAnimatedTurboModule';\nimport invariant from 'invariant';\n\n// TODO T69437152 @petetheheat - Delete this fork when Fabric ships to 100%.\nconst NativeAnimatedModule =\n  NativeAnimatedNonTurboModule ?? NativeAnimatedTurboModule;\n\nlet __nativeAnimatedNodeTagCount = 1; /* used for animated nodes */\nlet __nativeAnimationIdCount = 1; /* used for started animations */\n\nlet nativeEventEmitter;\n\nlet waitingForQueuedOperations = new Set<string>();\nlet queueOperations = false;\nlet queue: Array<() => void> = [];\n// $FlowFixMe\nlet singleOpQueue: Array<any> = [];\n\nconst useSingleOpBatching =\n  Platform.OS === 'android' &&\n  !!NativeAnimatedModule?.queueAndExecuteBatchedOperations &&\n  ReactNativeFeatureFlags.animatedShouldUseSingleOp();\nlet flushQueueTimeout = null;\n\nconst eventListenerGetValueCallbacks: {\n  [$FlowFixMe | number]: ((value: number) => void) | void,\n} = {};\nconst eventListenerAnimationFinishedCallbacks: {\n  [$FlowFixMe | number]: EndCallback | void,\n} = {};\nlet globalEventEmitterGetValueListener: ?EventSubscription = null;\nlet globalEventEmitterAnimationFinishedListener: ?EventSubscription = null;\n\nconst nativeOps: ?typeof NativeAnimatedModule = useSingleOpBatching\n  ? ((function () {\n      const apis = [\n        'createAnimatedNode', // 1\n        'updateAnimatedNodeConfig', // 2\n        'getValue', // 3\n        'startListeningToAnimatedNodeValue', // 4\n        'stopListeningToAnimatedNodeValue', // 5\n        'connectAnimatedNodes', // 6\n        'disconnectAnimatedNodes', // 7\n        'startAnimatingNode', // 8\n        'stopAnimation', // 9\n        'setAnimatedNodeValue', // 10\n        'setAnimatedNodeOffset', // 11\n        'flattenAnimatedNodeOffset', // 12\n        'extractAnimatedNodeOffset', // 13\n        'connectAnimatedNodeToView', // 14\n        'disconnectAnimatedNodeFromView', // 15\n        'restoreDefaultValues', // 16\n        'dropAnimatedNode', // 17\n        'addAnimatedEventToView', // 18\n        'removeAnimatedEventFromView', // 19\n        'addListener', // 20\n        'removeListener', // 21\n      ];\n      return apis.reduce<{[string]: number}>((acc, functionName, i) => {\n        // These indices need to be kept in sync with the indices in native (see NativeAnimatedModule in Java, or the equivalent for any other native platform).\n        // $FlowFixMe[prop-missing]\n        acc[functionName] = i + 1;\n        return acc;\n      }, {});\n    })(): $FlowFixMe)\n  : NativeAnimatedModule;\n\n/**\n * Wrappers around NativeAnimatedModule to provide flow and autocomplete support for\n * the native module methods, and automatic queue management on Android\n */\nconst API = {\n  getValue: function (\n    tag: number,\n    saveValueCallback: (value: number) => void,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (saveValueCallback) {\n        eventListenerGetValueCallbacks[tag] = saveValueCallback;\n      }\n      // $FlowFixMe\n      API.queueOperation(nativeOps.getValue, tag);\n    } else {\n      API.queueOperation(nativeOps.getValue, tag, saveValueCallback);\n    }\n  },\n  setWaitingForIdentifier: function (id: string): void {\n    waitingForQueuedOperations.add(id);\n    queueOperations = true;\n    if (\n      ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush() &&\n      flushQueueTimeout\n    ) {\n      clearTimeout(flushQueueTimeout);\n    }\n  },\n  unsetWaitingForIdentifier: function (id: string): void {\n    waitingForQueuedOperations.delete(id);\n\n    if (waitingForQueuedOperations.size === 0) {\n      queueOperations = false;\n      API.disableQueue();\n    }\n  },\n  disableQueue: function (): void {\n    invariant(nativeOps, 'Native animated module is not available');\n\n    if (ReactNativeFeatureFlags.animatedShouldDebounceQueueFlush()) {\n      const prevTimeout = flushQueueTimeout;\n      clearImmediate(prevTimeout);\n      flushQueueTimeout = setImmediate(API.flushQueue);\n    } else {\n      API.flushQueue();\n    }\n  },\n  flushQueue: function (): void {\n    // TODO: (T136971132)\n    invariant(\n      NativeAnimatedModule || process.env.NODE_ENV === 'test',\n      'Native animated module is not available',\n    );\n    flushQueueTimeout = null;\n\n    // Early returns before calling any APIs\n    if (useSingleOpBatching && singleOpQueue.length === 0) {\n      return;\n    }\n    if (!useSingleOpBatching && queue.length === 0) {\n      return;\n    }\n\n    if (useSingleOpBatching) {\n      // Set up event listener for callbacks if it's not set up\n      if (\n        !globalEventEmitterGetValueListener ||\n        !globalEventEmitterAnimationFinishedListener\n      ) {\n        setupGlobalEventEmitterListeners();\n      }\n      // Single op batching doesn't use callback functions, instead we\n      // use RCTDeviceEventEmitter. This reduces overhead of sending lots of\n      // JSI functions across to native code; but also, TM infrastructure currently\n      // does not support packing a function into native arrays.\n      NativeAnimatedModule?.queueAndExecuteBatchedOperations?.(singleOpQueue);\n      singleOpQueue.length = 0;\n    } else {\n      Platform.OS === 'android' &&\n        NativeAnimatedModule?.startOperationBatch?.();\n\n      for (let q = 0, l = queue.length; q < l; q++) {\n        queue[q]();\n      }\n      queue.length = 0;\n      Platform.OS === 'android' &&\n        NativeAnimatedModule?.finishOperationBatch?.();\n    }\n  },\n  queueOperation: <Args: $ReadOnlyArray<mixed>, Fn: (...Args) => void>(\n    fn: Fn,\n    ...args: Args\n  ): void => {\n    if (useSingleOpBatching) {\n      // Get the command ID from the queued function, and push that ID and any arguments needed to execute the operation\n      // $FlowFixMe: surprise, fn is actually a number\n      singleOpQueue.push(fn, ...args);\n      return;\n    }\n\n    // If queueing is explicitly on, *or* the queue has not yet\n    // been flushed, use the queue. This is to prevent operations\n    // from being executed out of order.\n    if (queueOperations || queue.length !== 0) {\n      queue.push(() => fn(...args));\n    } else {\n      fn(...args);\n    }\n  },\n  createAnimatedNode: function (tag: number, config: AnimatedNodeConfig): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.createAnimatedNode, tag, config);\n  },\n  updateAnimatedNodeConfig: function (\n    tag: number,\n    config: AnimatedNodeConfig,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (nativeOps.updateAnimatedNodeConfig) {\n      API.queueOperation(nativeOps.updateAnimatedNodeConfig, tag, config);\n    }\n  },\n  startListeningToAnimatedNodeValue: function (tag: number) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.startListeningToAnimatedNodeValue, tag);\n  },\n  stopListeningToAnimatedNodeValue: function (tag: number) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopListeningToAnimatedNodeValue, tag);\n  },\n  connectAnimatedNodes: function (parentTag: number, childTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodes, parentTag, childTag);\n  },\n  disconnectAnimatedNodes: function (\n    parentTag: number,\n    childTag: number,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.disconnectAnimatedNodes, parentTag, childTag);\n  },\n  startAnimatingNode: function (\n    animationId: number,\n    nodeTag: number,\n    config: AnimatingNodeConfig,\n    endCallback: EndCallback,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    if (useSingleOpBatching) {\n      if (endCallback) {\n        eventListenerAnimationFinishedCallbacks[animationId] = endCallback;\n      }\n      // $FlowFixMe\n      API.queueOperation(\n        // $FlowFixMe[incompatible-call]\n        nativeOps.startAnimatingNode,\n        animationId,\n        nodeTag,\n        config,\n      );\n    } else {\n      API.queueOperation(\n        nativeOps.startAnimatingNode,\n        animationId,\n        nodeTag,\n        config,\n        endCallback,\n      );\n    }\n  },\n  stopAnimation: function (animationId: number) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.stopAnimation, animationId);\n  },\n  setAnimatedNodeValue: function (nodeTag: number, value: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeValue, nodeTag, value);\n  },\n  setAnimatedNodeOffset: function (nodeTag: number, offset: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.setAnimatedNodeOffset, nodeTag, offset);\n  },\n  flattenAnimatedNodeOffset: function (nodeTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.flattenAnimatedNodeOffset, nodeTag);\n  },\n  extractAnimatedNodeOffset: function (nodeTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.extractAnimatedNodeOffset, nodeTag);\n  },\n  connectAnimatedNodeToView: function (nodeTag: number, viewTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.connectAnimatedNodeToView, nodeTag, viewTag);\n  },\n  disconnectAnimatedNodeFromView: function (\n    nodeTag: number,\n    viewTag: number,\n  ): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(\n      nativeOps.disconnectAnimatedNodeFromView,\n      nodeTag,\n      viewTag,\n    );\n  },\n  restoreDefaultValues: function (nodeTag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    // Backwards compat with older native runtimes, can be removed later.\n    if (nativeOps.restoreDefaultValues != null) {\n      API.queueOperation(nativeOps.restoreDefaultValues, nodeTag);\n    }\n  },\n  dropAnimatedNode: function (tag: number): void {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(nativeOps.dropAnimatedNode, tag);\n  },\n  addAnimatedEventToView: function (\n    viewTag: number,\n    eventName: string,\n    eventMapping: EventMapping,\n  ) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(\n      nativeOps.addAnimatedEventToView,\n      viewTag,\n      eventName,\n      eventMapping,\n    );\n  },\n  removeAnimatedEventFromView(\n    viewTag: number,\n    eventName: string,\n    animatedNodeTag: number,\n  ) {\n    invariant(nativeOps, 'Native animated module is not available');\n    API.queueOperation(\n      nativeOps.removeAnimatedEventFromView,\n      viewTag,\n      eventName,\n      animatedNodeTag,\n    );\n  },\n};\n\nfunction setupGlobalEventEmitterListeners() {\n  globalEventEmitterGetValueListener = RCTDeviceEventEmitter.addListener(\n    'onNativeAnimatedModuleGetValue',\n    function (params) {\n      const {tag} = params;\n      const callback = eventListenerGetValueCallbacks[tag];\n      if (!callback) {\n        return;\n      }\n      callback(params.value);\n      delete eventListenerGetValueCallbacks[tag];\n    },\n  );\n  globalEventEmitterAnimationFinishedListener =\n    RCTDeviceEventEmitter.addListener(\n      'onNativeAnimatedModuleAnimationFinished',\n      function (params) {\n        const {animationId} = params;\n        const callback = eventListenerAnimationFinishedCallbacks[animationId];\n        if (!callback) {\n          return;\n        }\n        callback(params);\n        delete eventListenerAnimationFinishedCallbacks[animationId];\n      },\n    );\n}\n\n/**\n * Styles allowed by the native animated implementation.\n *\n * In general native animated implementation should support any numeric or color property that\n * doesn't need to be updated through the shadow view hierarchy (all non-layout properties).\n */\nconst SUPPORTED_COLOR_STYLES = {\n  backgroundColor: true,\n  borderBottomColor: true,\n  borderColor: true,\n  borderEndColor: true,\n  borderLeftColor: true,\n  borderRightColor: true,\n  borderStartColor: true,\n  borderTopColor: true,\n  color: true,\n  tintColor: true,\n};\n\nconst SUPPORTED_STYLES = {\n  ...SUPPORTED_COLOR_STYLES,\n  borderBottomEndRadius: true,\n  borderBottomLeftRadius: true,\n  borderBottomRightRadius: true,\n  borderBottomStartRadius: true,\n  borderEndEndRadius: true,\n  borderEndStartRadius: true,\n  borderRadius: true,\n  borderTopEndRadius: true,\n  borderTopLeftRadius: true,\n  borderTopRightRadius: true,\n  borderTopStartRadius: true,\n  borderStartEndRadius: true,\n  borderStartStartRadius: true,\n  elevation: true,\n  opacity: true,\n  transform: true,\n  zIndex: true,\n  /* ios styles */\n  shadowOpacity: true,\n  shadowRadius: true,\n  /* legacy android transform properties */\n  scaleX: true,\n  scaleY: true,\n  translateX: true,\n  translateY: true,\n};\n\nconst SUPPORTED_TRANSFORMS = {\n  translateX: true,\n  translateY: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  rotate: true,\n  rotateX: true,\n  rotateY: true,\n  rotateZ: true,\n  perspective: true,\n  skewX: true,\n  skewY: true,\n  matrix: ReactNativeFeatureFlags.shouldUseAnimatedObjectForTransform(),\n};\n\nconst SUPPORTED_INTERPOLATION_PARAMS = {\n  inputRange: true,\n  outputRange: true,\n  extrapolate: true,\n  extrapolateRight: true,\n  extrapolateLeft: true,\n};\n\nfunction addWhitelistedStyleProp(prop: string): void {\n  // $FlowFixMe[prop-missing]\n  SUPPORTED_STYLES[prop] = true;\n}\n\nfunction addWhitelistedTransformProp(prop: string): void {\n  // $FlowFixMe[prop-missing]\n  SUPPORTED_TRANSFORMS[prop] = true;\n}\n\nfunction addWhitelistedInterpolationParam(param: string): void {\n  // $FlowFixMe[prop-missing]\n  SUPPORTED_INTERPOLATION_PARAMS[param] = true;\n}\n\nfunction isSupportedColorStyleProp(prop: string): boolean {\n  return SUPPORTED_COLOR_STYLES[prop] === true;\n}\n\nfunction isSupportedStyleProp(prop: string): boolean {\n  return SUPPORTED_STYLES[prop] === true;\n}\n\nfunction isSupportedTransformProp(prop: string): boolean {\n  return SUPPORTED_TRANSFORMS[prop] === true;\n}\n\nfunction isSupportedInterpolationParam(param: string): boolean {\n  return SUPPORTED_INTERPOLATION_PARAMS[param] === true;\n}\n\nfunction validateTransform(\n  configs: Array<\n    | {\n        type: 'animated',\n        property: string,\n        nodeTag: ?number,\n        ...\n      }\n    | {\n        type: 'static',\n        property: string,\n        value: number | string,\n        ...\n      },\n  >,\n): void {\n  configs.forEach(config => {\n    if (!isSupportedTransformProp(config.property)) {\n      throw new Error(\n        `Property '${config.property}' is not supported by native animated module`,\n      );\n    }\n  });\n}\n\nfunction validateStyles(styles: {[key: string]: ?number, ...}): void {\n  for (const key in styles) {\n    if (!isSupportedStyleProp(key)) {\n      throw new Error(\n        `Style property '${key}' is not supported by native animated module`,\n      );\n    }\n  }\n}\n\nfunction validateInterpolation<OutputT: number | string>(\n  config: InterpolationConfigType<OutputT>,\n): void {\n  for (const key in config) {\n    if (!isSupportedInterpolationParam(key)) {\n      throw new Error(\n        `Interpolation property '${key}' is not supported by native animated module`,\n      );\n    }\n  }\n}\n\nfunction generateNewNodeTag(): number {\n  return __nativeAnimatedNodeTagCount++;\n}\n\nfunction generateNewAnimationId(): number {\n  return __nativeAnimationIdCount++;\n}\n\nfunction assertNativeAnimatedModule(): void {\n  invariant(NativeAnimatedModule, 'Native animated module is not available');\n}\n\nlet _warnedMissingNativeAnimated = false;\n\nfunction shouldUseNativeDriver(\n  config: $ReadOnly<{...AnimationConfig, ...}> | EventConfig,\n): boolean {\n  if (config.useNativeDriver == null) {\n    console.warn(\n      'Animated: `useNativeDriver` was not specified. This is a required ' +\n        'option and must be explicitly set to `true` or `false`',\n    );\n  }\n\n  if (config.useNativeDriver === true && !NativeAnimatedModule) {\n    if (process.env.NODE_ENV !== 'test') {\n      if (!_warnedMissingNativeAnimated) {\n        console.warn(\n          'Animated: `useNativeDriver` is not supported because the native ' +\n            'animated module is missing. Falling back to JS-based animation. To ' +\n            'resolve this, add `RCTAnimation` module to this app, or remove ' +\n            '`useNativeDriver`. ' +\n            'Make sure to run `bundle exec pod install` first. Read more about autolinking: https://github.com/react-native-community/cli/blob/master/docs/autolinking.md',\n        );\n        _warnedMissingNativeAnimated = true;\n      }\n    }\n    return false;\n  }\n\n  return config.useNativeDriver || false;\n}\n\nfunction transformDataType(value: number | string): number | string {\n  // Change the string type to number type so we can reuse the same logic in\n  // iOS and Android platform\n  if (typeof value !== 'string') {\n    return value;\n  }\n\n  // Normalize degrees and radians to a number expressed in radians\n  if (value.endsWith('deg')) {\n    const degrees = parseFloat(value) || 0;\n    return (degrees * Math.PI) / 180.0;\n  } else if (value.endsWith('rad')) {\n    return parseFloat(value) || 0;\n  } else {\n    return value;\n  }\n}\n\nexport default {\n  API,\n  isSupportedColorStyleProp,\n  isSupportedStyleProp,\n  isSupportedTransformProp,\n  isSupportedInterpolationParam,\n  addWhitelistedStyleProp,\n  addWhitelistedTransformProp,\n  addWhitelistedInterpolationParam,\n  validateStyles,\n  validateTransform,\n  validateInterpolation,\n  generateNewNodeTag,\n  generateNewAnimationId,\n  assertNativeAnimatedModule,\n  shouldUseNativeDriver,\n  transformDataType,\n  // $FlowExpectedError[unsafe-getters-setters] - unsafe getter lint suppression\n  // $FlowExpectedError[missing-type-arg] - unsafe getter lint suppression\n  get nativeEventEmitter(): NativeEventEmitter {\n    if (!nativeEventEmitter) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      nativeEventEmitter = new NativeEventEmitter(\n        // T88715063: NativeEventEmitter only used this parameter on iOS. Now it uses it on all platforms, so this code was modified automatically to preserve its behavior\n        // If you want to use the native module on other platforms, please remove this condition and test its behavior\n        Platform.OS !== 'ios' ? null : NativeAnimatedModule,\n      );\n    }\n    return nativeEventEmitter;\n  },\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}