{"ast":null,"code":"import codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport * as React from 'react';\nvar NativeComponentRegistry = require('react-native/Libraries/NativeComponent/NativeComponentRegistry');\nvar _require = require(\"react-native/Libraries/ReactNative/RendererProxy\"),\n  dispatchCommand = _require.dispatchCommand;\nvar nativeComponentName = 'TraceUpdateOverlay';\nexport var __INTERNAL_VIEW_CONFIG = {\n  uiViewClassName: 'TraceUpdateOverlay',\n  validAttributes: {}\n};\nexport default NativeComponentRegistry.get(nativeComponentName, function () {\n  return __INTERNAL_VIEW_CONFIG;\n});\nexport var Commands = {\n  draw: function draw(ref, overlays) {\n    dispatchCommand(ref, \"draw\", [overlays]);\n  }\n};","map":{"version":3,"names":["codegenNativeCommands","codegenNativeComponent","React","NativeComponentRegistry","require","_require","dispatchCommand","nativeComponentName","__INTERNAL_VIEW_CONFIG","uiViewClassName","validAttributes","get","Commands","draw","ref","overlays"],"sources":["C:/Users/dudug/OneDrive/√Årea de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Components/TraceUpdateOverlay/TraceUpdateOverlayNativeComponent.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\nimport type {HostComponent} from '../../Renderer/shims/ReactNativeTypes';\nimport type {ProcessedColorValue} from '../../StyleSheet/processColor';\nimport type {ViewProps} from '../View/ViewPropTypes';\n\nimport codegenNativeCommands from '../../Utilities/codegenNativeCommands';\nimport codegenNativeComponent from '../../Utilities/codegenNativeComponent';\nimport * as React from 'react';\n\ntype NativeProps = $ReadOnly<{|\n  ...ViewProps,\n|}>;\nexport type TraceUpdateOverlayNativeComponentType = HostComponent<NativeProps>;\nexport type Overlay = {\n  rect: {left: number, top: number, width: number, height: number},\n  color: ?ProcessedColorValue,\n};\n\ninterface NativeCommands {\n  +draw: (\n    viewRef: React.ElementRef<TraceUpdateOverlayNativeComponentType>,\n    // TODO(T144046177): Ideally we can pass array of Overlay, but currently\n    // Array type is not supported in RN codegen for building native commands.\n    overlays: string,\n  ) => void;\n}\n\nexport const Commands: NativeCommands = codegenNativeCommands<NativeCommands>({\n  supportedCommands: ['draw'],\n});\n\nexport default (codegenNativeComponent<NativeProps>(\n  'TraceUpdateOverlay',\n): HostComponent<NativeProps>);\n"],"mappings":"AAcA,OAAOA,qBAAqB,MAAM,uCAAuC;AACzE,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAO,KAAKC,KAAK,MAAM,OAAO;AAF9B,IAAMC,uBAAuB,GAAGC,OAAO,CAAC,gEAAgE,CAAC;AACzG,IAAAC,QAAA,GAA0BD,OAAO,CAAC,kDAAkD,CAAC;EAA9EE,eAAe,GAAAD,QAAA,CAAfC,eAAe;AAEtB,IAAIC,mBAAmB,GAAG,oBAAoB;AAG9C,OAAO,IAAMC,sBAAsB,GAAG;EACpCC,eAAe,EAAE,oBAAoB;EACrCC,eAAe,EAAE,CAAC;AACpB,CAAC;AAED,eAAeP,uBAAuB,CAACQ,GAAG,CAACJ,mBAAmB,EAAE;EAAA,OAAMC,sBAAsB;AAAA,EAAC;AAE7F,OAAO,IAAMI,QAAQ,GAAG;EACpBC,IAAI,WAAAA,KAACC,GAAG,EAAEC,QAAQ,EAAE;IAChBT,eAAe,CAACQ,GAAG,EAAE,MAAM,EAAE,CAACC,QAAQ,CAAC,CAAC;EAC5C;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}