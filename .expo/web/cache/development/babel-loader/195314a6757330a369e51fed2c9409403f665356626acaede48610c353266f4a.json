{"ast":null,"code":"'use strict';\n\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport Platform from '../../Utilities/Platform';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedColor from '../nodes/AnimatedColor';\nimport AnimatedProps from '../nodes/AnimatedProps';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\nvar startNativeAnimationNextId = 1;\nvar Animation = function () {\n  function Animation() {\n    _classCallCheck(this, Animation);\n  }\n  return _createClass(Animation, [{\n    key: \"start\",\n    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {}\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.__nativeId) {\n        NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n      }\n    }\n  }, {\n    key: \"__getNativeAnimationConfig\",\n    value: function __getNativeAnimationConfig() {\n      throw new Error('This animation type cannot be offloaded to native');\n    }\n  }, {\n    key: \"__debouncedOnEnd\",\n    value: function __debouncedOnEnd(result) {\n      var onEnd = this.__onEnd;\n      this.__onEnd = null;\n      onEnd && onEnd(result);\n    }\n  }, {\n    key: \"__findAnimatedPropsNodes\",\n    value: function __findAnimatedPropsNodes(node) {\n      var result = [];\n      if (node instanceof AnimatedProps) {\n        result.push(node);\n        return result;\n      }\n      if (Platform.OS === 'ios' && (node instanceof AnimatedValueXY || node instanceof AnimatedColor)) {\n        return result;\n      }\n      for (var child of node.__getChildren()) {\n        result.push.apply(result, _toConsumableArray(this.__findAnimatedPropsNodes(child)));\n      }\n      return result;\n    }\n  }, {\n    key: \"__startNativeAnimation\",\n    value: function __startNativeAnimation(animatedValue) {\n      var _this = this;\n      var startNativeAnimationWaitId = `${startNativeAnimationNextId}:startAnimation`;\n      startNativeAnimationNextId += 1;\n      NativeAnimatedHelper.API.setWaitingForIdentifier(startNativeAnimationWaitId);\n      try {\n        var config = this.__getNativeAnimationConfig();\n        animatedValue.__makeNative(config.platformConfig);\n        this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n        NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), config, function (result) {\n          _this.__debouncedOnEnd(result);\n          var value = result.value;\n          if (value != null) {\n            animatedValue.__onAnimatedValueUpdateReceived(value);\n            _this.__findAnimatedPropsNodes(animatedValue).forEach(function (node) {\n              return node.update();\n            });\n          }\n        });\n      } catch (e) {\n        throw e;\n      } finally {\n        NativeAnimatedHelper.API.unsetWaitingForIdentifier(startNativeAnimationWaitId);\n      }\n    }\n  }]);\n}();\nexport { Animation as default };","map":{"version":3,"names":["_toConsumableArray","_classCallCheck","_createClass","Platform","NativeAnimatedHelper","AnimatedColor","AnimatedProps","AnimatedValueXY","startNativeAnimationNextId","Animation","key","value","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__findAnimatedPropsNodes","node","push","OS","child","__getChildren","apply","__startNativeAnimation","_this","startNativeAnimationWaitId","setWaitingForIdentifier","config","__makeNative","platformConfig","generateNewAnimationId","startAnimatingNode","__getNativeTag","__onAnimatedValueUpdateReceived","forEach","update","e","unsetWaitingForIdentifier","default"],"sources":["C:/Users/dudug/OneDrive/Área de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Animated/animations/Animation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\nimport type AnimatedNode from '../nodes/AnimatedNode';\nimport type AnimatedValue from '../nodes/AnimatedValue';\n\nimport Platform from '../../Utilities/Platform';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedColor from '../nodes/AnimatedColor';\nimport AnimatedProps from '../nodes/AnimatedProps';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\n\nexport type EndResult = {finished: boolean, value?: number, ...};\nexport type EndCallback = (result: EndResult) => void;\n\nexport type AnimationConfig = {\n  isInteraction?: boolean,\n  useNativeDriver: boolean,\n  platformConfig?: PlatformConfig,\n  onComplete?: ?EndCallback,\n  iterations?: number,\n};\n\nlet startNativeAnimationNextId = 1;\n\n// Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\nexport default class Animation {\n  __active: boolean;\n  __isInteraction: boolean;\n  __nativeId: number;\n  __onEnd: ?EndCallback;\n  __iterations: number;\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {}\n\n  stop(): void {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  }\n\n  __getNativeAnimationConfig(): any {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  }\n\n  // Helper function for subclasses to make sure onEnd is only called once.\n  __debouncedOnEnd(result: EndResult): void {\n    const onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  }\n\n  __findAnimatedPropsNodes(node: AnimatedNode): Array<AnimatedProps> {\n    const result = [];\n\n    if (node instanceof AnimatedProps) {\n      result.push(node);\n      return result;\n    }\n\n    // Vectorized animations (animations on AnimatedValueXY, AnimatedColor nodes)\n    // are split into multiple animations for each component that execute in parallel.\n    // Calling update() on AnimatedProps when each animation completes results in\n    // potential flickering as all animations that are part of the vectorized animation\n    // may not have completed yet. For example, only the animation for the red channel of\n    // an animating color may have been completed, resulting in a temporary red color\n    // being rendered. So, for now, ignore AnimatedProps that use a vectorized animation.\n    if (\n      Platform.OS === 'ios' &&\n      (node instanceof AnimatedValueXY || node instanceof AnimatedColor)\n    ) {\n      return result;\n    }\n\n    for (const child of node.__getChildren()) {\n      result.push(...this.__findAnimatedPropsNodes(child));\n    }\n\n    return result;\n  }\n\n  __startNativeAnimation(animatedValue: AnimatedValue): void {\n    const startNativeAnimationWaitId = `${startNativeAnimationNextId}:startAnimation`;\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(\n      startNativeAnimationWaitId,\n    );\n    try {\n      const config = this.__getNativeAnimationConfig();\n      animatedValue.__makeNative(config.platformConfig);\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(\n        this.__nativeId,\n        animatedValue.__getNativeTag(),\n        config,\n        result => {\n          this.__debouncedOnEnd(result);\n\n          // When using natively driven animations, once the animation completes,\n          // we need to ensure that the JS side nodes are synced with the updated\n          // values.\n          const {value} = result;\n          if (value != null) {\n            animatedValue.__onAnimatedValueUpdateReceived(value);\n\n            // Once the JS side node is synced with the updated values, trigger an\n            // update on the AnimatedProps nodes to call any registered callbacks.\n            this.__findAnimatedPropsNodes(animatedValue).forEach(node =>\n              node.update(),\n            );\n          }\n        },\n      );\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(\n        startNativeAnimationWaitId,\n      );\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}