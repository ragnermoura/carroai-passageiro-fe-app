{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"accessibilityElementsHidden\", \"accessibilityLabel\", \"accessibilityLabelledBy\", \"accessibilityLiveRegion\", \"accessibilityState\", \"accessibilityValue\", \"aria-busy\", \"aria-checked\", \"aria-disabled\", \"aria-expanded\", \"aria-hidden\", \"aria-label\", \"aria-labelledby\", \"aria-live\", \"aria-selected\", \"aria-valuemax\", \"aria-valuemin\", \"aria-valuenow\", \"aria-valuetext\", \"focusable\", \"id\", \"importantForAccessibility\", \"nativeID\", \"pointerEvents\", \"tabIndex\"];\nvar _jsxFileName = \"C:\\\\Users\\\\dudug\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos-reactnative\\\\carroai-passageiro-fe-app\\\\node_modules\\\\react-native\\\\Libraries\\\\Components\\\\View\\\\View.js\",\n  _this = this;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport ReactNativeFeatureFlags from '../../ReactNative/ReactNativeFeatureFlags';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar View = React.forwardRef(function (_ref, forwardedRef) {\n  var _ariaLabelledBy$split;\n  var accessibilityElementsHidden = _ref.accessibilityElementsHidden,\n    accessibilityLabel = _ref.accessibilityLabel,\n    accessibilityLabelledBy = _ref.accessibilityLabelledBy,\n    accessibilityLiveRegion = _ref.accessibilityLiveRegion,\n    accessibilityState = _ref.accessibilityState,\n    accessibilityValue = _ref.accessibilityValue,\n    ariaBusy = _ref['aria-busy'],\n    ariaChecked = _ref['aria-checked'],\n    ariaDisabled = _ref['aria-disabled'],\n    ariaExpanded = _ref['aria-expanded'],\n    ariaHidden = _ref['aria-hidden'],\n    ariaLabel = _ref['aria-label'],\n    ariaLabelledBy = _ref['aria-labelledby'],\n    ariaLive = _ref['aria-live'],\n    ariaSelected = _ref['aria-selected'],\n    ariaValueMax = _ref['aria-valuemax'],\n    ariaValueMin = _ref['aria-valuemin'],\n    ariaValueNow = _ref['aria-valuenow'],\n    ariaValueText = _ref['aria-valuetext'],\n    focusable = _ref.focusable,\n    id = _ref.id,\n    importantForAccessibility = _ref.importantForAccessibility,\n    nativeID = _ref.nativeID,\n    pointerEvents = _ref.pointerEvents,\n    tabIndex = _ref.tabIndex,\n    otherProps = _objectWithoutProperties(_ref, _excluded);\n  var hasTextAncestor = React.useContext(TextAncestor);\n  var _accessibilityLabelledBy = (_ariaLabelledBy$split = ariaLabelledBy == null ? void 0 : ariaLabelledBy.split(/\\s*,\\s*/g)) != null ? _ariaLabelledBy$split : accessibilityLabelledBy;\n  var _accessibilityState;\n  if (accessibilityState != null || ariaBusy != null || ariaChecked != null || ariaDisabled != null || ariaExpanded != null || ariaSelected != null) {\n    _accessibilityState = {\n      busy: ariaBusy != null ? ariaBusy : accessibilityState == null ? void 0 : accessibilityState.busy,\n      checked: ariaChecked != null ? ariaChecked : accessibilityState == null ? void 0 : accessibilityState.checked,\n      disabled: ariaDisabled != null ? ariaDisabled : accessibilityState == null ? void 0 : accessibilityState.disabled,\n      expanded: ariaExpanded != null ? ariaExpanded : accessibilityState == null ? void 0 : accessibilityState.expanded,\n      selected: ariaSelected != null ? ariaSelected : accessibilityState == null ? void 0 : accessibilityState.selected\n    };\n  }\n  var _accessibilityValue;\n  if (accessibilityValue != null || ariaValueMax != null || ariaValueMin != null || ariaValueNow != null || ariaValueText != null) {\n    _accessibilityValue = {\n      max: ariaValueMax != null ? ariaValueMax : accessibilityValue == null ? void 0 : accessibilityValue.max,\n      min: ariaValueMin != null ? ariaValueMin : accessibilityValue == null ? void 0 : accessibilityValue.min,\n      now: ariaValueNow != null ? ariaValueNow : accessibilityValue == null ? void 0 : accessibilityValue.now,\n      text: ariaValueText != null ? ariaValueText : accessibilityValue == null ? void 0 : accessibilityValue.text\n    };\n  }\n  var style = flattenStyle(otherProps.style);\n  var newPointerEvents = (style == null ? void 0 : style.pointerEvents) || pointerEvents;\n  var collapsableOverride = ReactNativeFeatureFlags.shouldForceUnflattenForElevation() ? {\n    collapsable: style != null && style.elevation != null && style.elevation !== 0 ? false : otherProps.collapsable\n  } : {};\n  var actualView = _jsxDEV(ViewNativeComponent, _objectSpread(_objectSpread(_objectSpread({}, otherProps), collapsableOverride), {}, {\n    accessibilityLiveRegion: ariaLive === 'off' ? 'none' : ariaLive != null ? ariaLive : accessibilityLiveRegion,\n    accessibilityLabel: ariaLabel != null ? ariaLabel : accessibilityLabel,\n    focusable: tabIndex !== undefined ? !tabIndex : focusable,\n    accessibilityState: _accessibilityState,\n    accessibilityElementsHidden: ariaHidden != null ? ariaHidden : accessibilityElementsHidden,\n    accessibilityLabelledBy: _accessibilityLabelledBy,\n    accessibilityValue: _accessibilityValue,\n    importantForAccessibility: ariaHidden === true ? 'no-hide-descendants' : importantForAccessibility,\n    nativeID: id != null ? id : nativeID,\n    style: style,\n    pointerEvents: newPointerEvents,\n    ref: forwardedRef\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, _this);\n  if (hasTextAncestor) {\n    return _jsxDEV(TextAncestor.Provider, {\n      value: false,\n      children: actualView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, _this);\n  }\n  return actualView;\n});\nView.displayName = 'View';\nmodule.exports = View;","map":{"version":3,"names":["ReactNativeFeatureFlags","flattenStyle","TextAncestor","ViewNativeComponent","React","jsxDEV","_jsxDEV","View","forwardRef","_ref","forwardedRef","_ariaLabelledBy$split","accessibilityElementsHidden","accessibilityLabel","accessibilityLabelledBy","accessibilityLiveRegion","accessibilityState","accessibilityValue","ariaBusy","ariaChecked","ariaDisabled","ariaExpanded","ariaHidden","ariaLabel","ariaLabelledBy","ariaLive","ariaSelected","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","focusable","id","importantForAccessibility","nativeID","pointerEvents","tabIndex","otherProps","_objectWithoutProperties","_excluded","hasTextAncestor","useContext","_accessibilityLabelledBy","split","_accessibilityState","busy","checked","disabled","expanded","selected","_accessibilityValue","max","min","now","text","style","newPointerEvents","collapsableOverride","shouldForceUnflattenForElevation","collapsable","elevation","actualView","_objectSpread","undefined","ref","fileName","_jsxFileName","lineNumber","columnNumber","_this","Provider","value","children","displayName","module","exports"],"sources":["C:/Users/dudug/OneDrive/Área de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Components/View/View.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\nimport type {ViewProps} from './ViewPropTypes';\n\nimport ReactNativeFeatureFlags from '../../ReactNative/ReactNativeFeatureFlags';\nimport flattenStyle from '../../StyleSheet/flattenStyle';\nimport TextAncestor from '../../Text/TextAncestor';\nimport ViewNativeComponent from './ViewNativeComponent';\nimport * as React from 'react';\n\nexport type Props = ViewProps;\n\n/**\n * The most fundamental component for building a UI, View is a container that\n * supports layout with flexbox, style, some touch handling, and accessibility\n * controls.\n *\n * @see https://reactnative.dev/docs/view\n */\nconst View: React.AbstractComponent<\n  ViewProps,\n  React.ElementRef<typeof ViewNativeComponent>,\n> = React.forwardRef(\n  (\n    {\n      accessibilityElementsHidden,\n      accessibilityLabel,\n      accessibilityLabelledBy,\n      accessibilityLiveRegion,\n      accessibilityState,\n      accessibilityValue,\n      'aria-busy': ariaBusy,\n      'aria-checked': ariaChecked,\n      'aria-disabled': ariaDisabled,\n      'aria-expanded': ariaExpanded,\n      'aria-hidden': ariaHidden,\n      'aria-label': ariaLabel,\n      'aria-labelledby': ariaLabelledBy,\n      'aria-live': ariaLive,\n      'aria-selected': ariaSelected,\n      'aria-valuemax': ariaValueMax,\n      'aria-valuemin': ariaValueMin,\n      'aria-valuenow': ariaValueNow,\n      'aria-valuetext': ariaValueText,\n      focusable,\n      id,\n      importantForAccessibility,\n      nativeID,\n      pointerEvents,\n      tabIndex,\n      ...otherProps\n    }: ViewProps,\n    forwardedRef,\n  ) => {\n    const hasTextAncestor = React.useContext(TextAncestor);\n    const _accessibilityLabelledBy =\n      ariaLabelledBy?.split(/\\s*,\\s*/g) ?? accessibilityLabelledBy;\n\n    let _accessibilityState;\n    if (\n      accessibilityState != null ||\n      ariaBusy != null ||\n      ariaChecked != null ||\n      ariaDisabled != null ||\n      ariaExpanded != null ||\n      ariaSelected != null\n    ) {\n      _accessibilityState = {\n        busy: ariaBusy ?? accessibilityState?.busy,\n        checked: ariaChecked ?? accessibilityState?.checked,\n        disabled: ariaDisabled ?? accessibilityState?.disabled,\n        expanded: ariaExpanded ?? accessibilityState?.expanded,\n        selected: ariaSelected ?? accessibilityState?.selected,\n      };\n    }\n    let _accessibilityValue;\n    if (\n      accessibilityValue != null ||\n      ariaValueMax != null ||\n      ariaValueMin != null ||\n      ariaValueNow != null ||\n      ariaValueText != null\n    ) {\n      _accessibilityValue = {\n        max: ariaValueMax ?? accessibilityValue?.max,\n        min: ariaValueMin ?? accessibilityValue?.min,\n        now: ariaValueNow ?? accessibilityValue?.now,\n        text: ariaValueText ?? accessibilityValue?.text,\n      };\n    }\n\n    // $FlowFixMe[underconstrained-implicit-instantiation]\n    let style = flattenStyle(otherProps.style);\n\n    // $FlowFixMe[sketchy-null-mixed]\n    const newPointerEvents = style?.pointerEvents || pointerEvents;\n    const collapsableOverride =\n      ReactNativeFeatureFlags.shouldForceUnflattenForElevation()\n        ? {\n            collapsable:\n              style != null && style.elevation != null && style.elevation !== 0\n                ? false\n                : otherProps.collapsable,\n          }\n        : {};\n\n    const actualView = (\n      <ViewNativeComponent\n        {...otherProps}\n        {...collapsableOverride}\n        accessibilityLiveRegion={\n          ariaLive === 'off' ? 'none' : ariaLive ?? accessibilityLiveRegion\n        }\n        accessibilityLabel={ariaLabel ?? accessibilityLabel}\n        focusable={tabIndex !== undefined ? !tabIndex : focusable}\n        accessibilityState={_accessibilityState}\n        accessibilityElementsHidden={ariaHidden ?? accessibilityElementsHidden}\n        accessibilityLabelledBy={_accessibilityLabelledBy}\n        accessibilityValue={_accessibilityValue}\n        importantForAccessibility={\n          ariaHidden === true\n            ? 'no-hide-descendants'\n            : importantForAccessibility\n        }\n        nativeID={id ?? nativeID}\n        style={style}\n        // $FlowFixMe[incompatible-type]\n        pointerEvents={newPointerEvents}\n        ref={forwardedRef}\n      />\n    );\n\n    if (hasTextAncestor) {\n      return (\n        <TextAncestor.Provider value={false}>\n          {actualView}\n        </TextAncestor.Provider>\n      );\n    }\n\n    return actualView;\n  },\n);\n\nView.displayName = 'View';\n\nmodule.exports = View;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}