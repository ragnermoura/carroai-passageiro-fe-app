{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { getFabricUIManager } from '../../ReactNative/FabricUIManager';\nimport ReactFabric from '../../Renderer/shims/ReactFabric';\nimport { createNodeList } from '../OldStyleCollections/NodeList';\nimport nullthrows from 'nullthrows';\nvar ReadOnlyElementClass;\nvar ReadOnlyNode = function () {\n  function ReadOnlyNode(internalInstanceHandle) {\n    _classCallCheck(this, ReadOnlyNode);\n    setInstanceHandle(this, internalInstanceHandle);\n  }\n  return _createClass(ReadOnlyNode, [{\n    key: \"childNodes\",\n    get: function get() {\n      var childNodes = getChildNodes(this);\n      return createNodeList(childNodes);\n    }\n  }, {\n    key: \"firstChild\",\n    get: function get() {\n      var childNodes = getChildNodes(this);\n      if (childNodes.length === 0) {\n        return null;\n      }\n      return childNodes[0];\n    }\n  }, {\n    key: \"isConnected\",\n    get: function get() {\n      var shadowNode = getShadowNode(this);\n      if (shadowNode == null) {\n        return false;\n      }\n      return nullthrows(getFabricUIManager()).isConnected(shadowNode);\n    }\n  }, {\n    key: \"lastChild\",\n    get: function get() {\n      var childNodes = getChildNodes(this);\n      if (childNodes.length === 0) {\n        return null;\n      }\n      return childNodes[childNodes.length - 1];\n    }\n  }, {\n    key: \"nextSibling\",\n    get: function get() {\n      var _getNodeSiblingsAndPo = getNodeSiblingsAndPosition(this),\n        _getNodeSiblingsAndPo2 = _slicedToArray(_getNodeSiblingsAndPo, 2),\n        siblings = _getNodeSiblingsAndPo2[0],\n        position = _getNodeSiblingsAndPo2[1];\n      if (position === siblings.length - 1) {\n        return null;\n      }\n      return siblings[position + 1];\n    }\n  }, {\n    key: \"nodeName\",\n    get: function get() {\n      throw new TypeError('`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n    }\n  }, {\n    key: \"nodeType\",\n    get: function get() {\n      throw new TypeError('`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n    }\n  }, {\n    key: \"nodeValue\",\n    get: function get() {\n      throw new TypeError('`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n    }\n  }, {\n    key: \"parentElement\",\n    get: function get() {\n      var parentNode = this.parentNode;\n      if (ReadOnlyElementClass == null) {\n        ReadOnlyElementClass = require('./ReadOnlyElement').default;\n      }\n      if (parentNode instanceof ReadOnlyElementClass) {\n        return parentNode;\n      }\n      return null;\n    }\n  }, {\n    key: \"parentNode\",\n    get: function get() {\n      var shadowNode = getShadowNode(this);\n      if (shadowNode == null) {\n        return null;\n      }\n      var parentInstanceHandle = nullthrows(getFabricUIManager()).getParentNode(shadowNode);\n      if (parentInstanceHandle == null) {\n        return null;\n      }\n      return getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle);\n    }\n  }, {\n    key: \"previousSibling\",\n    get: function get() {\n      var _getNodeSiblingsAndPo3 = getNodeSiblingsAndPosition(this),\n        _getNodeSiblingsAndPo4 = _slicedToArray(_getNodeSiblingsAndPo3, 2),\n        siblings = _getNodeSiblingsAndPo4[0],\n        position = _getNodeSiblingsAndPo4[1];\n      if (position === 0) {\n        return null;\n      }\n      return siblings[position - 1];\n    }\n  }, {\n    key: \"textContent\",\n    get: function get() {\n      throw new TypeError('`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`');\n    }\n  }, {\n    key: \"compareDocumentPosition\",\n    value: function compareDocumentPosition(otherNode) {\n      if (otherNode === this) {\n        return 0;\n      }\n      var shadowNode = getShadowNode(this);\n      var otherShadowNode = getShadowNode(otherNode);\n      if (shadowNode == null || otherShadowNode == null) {\n        return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n      }\n      return nullthrows(getFabricUIManager()).compareDocumentPosition(shadowNode, otherShadowNode);\n    }\n  }, {\n    key: \"contains\",\n    value: function contains(otherNode) {\n      if (otherNode === this) {\n        return true;\n      }\n      var position = this.compareDocumentPosition(otherNode);\n      return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n    }\n  }, {\n    key: \"getRootNode\",\n    value: function getRootNode() {\n      var lastKnownParent = this;\n      var nextPossibleParent = this.parentNode;\n      while (nextPossibleParent != null) {\n        lastKnownParent = nextPossibleParent;\n        nextPossibleParent = nextPossibleParent.parentNode;\n      }\n      return lastKnownParent;\n    }\n  }, {\n    key: \"hasChildNodes\",\n    value: function hasChildNodes() {\n      return getChildNodes(this).length > 0;\n    }\n  }]);\n}();\nReadOnlyNode.ELEMENT_NODE = 1;\nReadOnlyNode.ATTRIBUTE_NODE = 2;\nReadOnlyNode.TEXT_NODE = 3;\nReadOnlyNode.CDATA_SECTION_NODE = 4;\nReadOnlyNode.ENTITY_REFERENCE_NODE = 5;\nReadOnlyNode.ENTITY_NODE = 6;\nReadOnlyNode.PROCESSING_INSTRUCTION_NODE = 7;\nReadOnlyNode.COMMENT_NODE = 8;\nReadOnlyNode.DOCUMENT_NODE = 9;\nReadOnlyNode.DOCUMENT_TYPE_NODE = 10;\nReadOnlyNode.DOCUMENT_FRAGMENT_NODE = 11;\nReadOnlyNode.NOTATION_NODE = 12;\nReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED = 1;\nReadOnlyNode.DOCUMENT_POSITION_PRECEDING = 2;\nReadOnlyNode.DOCUMENT_POSITION_FOLLOWING = 4;\nReadOnlyNode.DOCUMENT_POSITION_CONTAINS = 8;\nReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY = 16;\nReadOnlyNode.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;\nexport { ReadOnlyNode as default };\nvar INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\nexport function getInstanceHandle(node) {\n  return node[INSTANCE_HANDLE_KEY];\n}\nfunction setInstanceHandle(node, instanceHandle) {\n  node[INSTANCE_HANDLE_KEY] = instanceHandle;\n}\nexport function getShadowNode(node) {\n  return ReactFabric.getNodeFromInternalInstanceHandle(getInstanceHandle(node));\n}\nexport function getChildNodes(node) {\n  var shadowNode = getShadowNode(node);\n  if (shadowNode == null) {\n    return [];\n  }\n  var childNodeInstanceHandles = nullthrows(getFabricUIManager()).getChildNodes(shadowNode);\n  return childNodeInstanceHandles.map(function (instanceHandle) {\n    return getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n  });\n}\nfunction getNodeSiblingsAndPosition(node) {\n  var parent = node.parentNode;\n  if (parent == null) {\n    return [[node], 0];\n  }\n  var siblings = getChildNodes(parent);\n  var position = siblings.indexOf(node);\n  if (position === -1) {\n    throw new TypeError(\"Missing node in parent's child node list\");\n  }\n  return [siblings, position];\n}\nexport function getPublicInstanceFromInternalInstanceHandle(instanceHandle) {\n  var mixedPublicInstance = ReactFabric.getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n  return mixedPublicInstance;\n}","map":{"version":3,"names":["getFabricUIManager","ReactFabric","createNodeList","nullthrows","ReadOnlyElementClass","ReadOnlyNode","internalInstanceHandle","_classCallCheck","setInstanceHandle","_createClass","key","get","childNodes","getChildNodes","length","shadowNode","getShadowNode","isConnected","_getNodeSiblingsAndPo","getNodeSiblingsAndPosition","_getNodeSiblingsAndPo2","_slicedToArray","siblings","position","TypeError","parentNode","require","default","parentInstanceHandle","getParentNode","getPublicInstanceFromInternalInstanceHandle","_getNodeSiblingsAndPo3","_getNodeSiblingsAndPo4","value","compareDocumentPosition","otherNode","otherShadowNode","DOCUMENT_POSITION_DISCONNECTED","contains","DOCUMENT_POSITION_CONTAINED_BY","getRootNode","lastKnownParent","nextPossibleParent","hasChildNodes","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","DOCUMENT_POSITION_PRECEDING","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_CONTAINS","DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","INSTANCE_HANDLE_KEY","Symbol","getInstanceHandle","node","instanceHandle","getNodeFromInternalInstanceHandle","childNodeInstanceHandles","map","parent","indexOf","mixedPublicInstance"],"sources":["C:/Users/dudug/OneDrive/√Årea de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/DOM/Nodes/ReadOnlyNode.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n// flowlint unsafe-getters-setters:off\n\nimport type {\n  InternalInstanceHandle,\n  Node as ShadowNode,\n} from '../../Renderer/shims/ReactNativeTypes';\nimport type NodeList from '../OldStyleCollections/NodeList';\nimport type ReadOnlyElement from './ReadOnlyElement';\n\nimport {getFabricUIManager} from '../../ReactNative/FabricUIManager';\nimport ReactFabric from '../../Renderer/shims/ReactFabric';\nimport {createNodeList} from '../OldStyleCollections/NodeList';\nimport nullthrows from 'nullthrows';\n\n// We initialize this lazily to avoid a require cycle\n// (`ReadOnlyElement` also depends on `ReadOnlyNode`).\nlet ReadOnlyElementClass: Class<ReadOnlyElement>;\n\nexport default class ReadOnlyNode {\n  constructor(internalInstanceHandle: InternalInstanceHandle) {\n    setInstanceHandle(this, internalInstanceHandle);\n  }\n\n  get childNodes(): NodeList<ReadOnlyNode> {\n    const childNodes = getChildNodes(this);\n    return createNodeList(childNodes);\n  }\n\n  get firstChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[0];\n  }\n\n  get isConnected(): boolean {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return false;\n    }\n\n    return nullthrows(getFabricUIManager()).isConnected(shadowNode);\n  }\n\n  get lastChild(): ReadOnlyNode | null {\n    const childNodes = getChildNodes(this);\n\n    if (childNodes.length === 0) {\n      return null;\n    }\n\n    return childNodes[childNodes.length - 1];\n  }\n\n  get nextSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === siblings.length - 1) {\n      // this node is the last child of its parent, so there is no next sibling.\n      return null;\n    }\n\n    return siblings[position + 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeName(): string {\n    throw new TypeError(\n      '`nodeName` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeType(): number {\n    throw new TypeError(\n      '`nodeType` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  /**\n   * @abstract\n   */\n  get nodeValue(): string | null {\n    throw new TypeError(\n      '`nodeValue` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  get parentElement(): ReadOnlyElement | null {\n    const parentNode = this.parentNode;\n\n    if (ReadOnlyElementClass == null) {\n      // We initialize this lazily to avoid a require cycle.\n      ReadOnlyElementClass = require('./ReadOnlyElement').default;\n    }\n\n    if (parentNode instanceof ReadOnlyElementClass) {\n      return parentNode;\n    }\n\n    return null;\n  }\n\n  get parentNode(): ReadOnlyNode | null {\n    const shadowNode = getShadowNode(this);\n\n    if (shadowNode == null) {\n      return null;\n    }\n\n    const parentInstanceHandle = nullthrows(getFabricUIManager()).getParentNode(\n      shadowNode,\n    );\n\n    if (parentInstanceHandle == null) {\n      return null;\n    }\n\n    return getPublicInstanceFromInternalInstanceHandle(parentInstanceHandle);\n  }\n\n  get previousSibling(): ReadOnlyNode | null {\n    const [siblings, position] = getNodeSiblingsAndPosition(this);\n\n    if (position === 0) {\n      // this node is the first child of its parent, so there is no previous sibling.\n      return null;\n    }\n\n    return siblings[position - 1];\n  }\n\n  /**\n   * @abstract\n   */\n  get textContent(): string | null {\n    throw new TypeError(\n      '`textContent` is abstract and must be implemented in a subclass of `ReadOnlyNode`',\n    );\n  }\n\n  compareDocumentPosition(otherNode: ReadOnlyNode): number {\n    // Quick check to avoid having to call into Fabric if the nodes are the same.\n    if (otherNode === this) {\n      return 0;\n    }\n\n    const shadowNode = getShadowNode(this);\n    const otherShadowNode = getShadowNode(otherNode);\n\n    if (shadowNode == null || otherShadowNode == null) {\n      return ReadOnlyNode.DOCUMENT_POSITION_DISCONNECTED;\n    }\n\n    return nullthrows(getFabricUIManager()).compareDocumentPosition(\n      shadowNode,\n      otherShadowNode,\n    );\n  }\n\n  contains(otherNode: ReadOnlyNode): boolean {\n    if (otherNode === this) {\n      return true;\n    }\n\n    const position = this.compareDocumentPosition(otherNode);\n    // eslint-disable-next-line no-bitwise\n    return (position & ReadOnlyNode.DOCUMENT_POSITION_CONTAINED_BY) !== 0;\n  }\n\n  getRootNode(): ReadOnlyNode {\n    // eslint-disable-next-line consistent-this\n    let lastKnownParent: ReadOnlyNode = this;\n    let nextPossibleParent: ?ReadOnlyNode = this.parentNode;\n\n    while (nextPossibleParent != null) {\n      lastKnownParent = nextPossibleParent;\n      nextPossibleParent = nextPossibleParent.parentNode;\n    }\n\n    return lastKnownParent;\n  }\n\n  hasChildNodes(): boolean {\n    return getChildNodes(this).length > 0;\n  }\n\n  /*\n   * Node types, as returned by the `nodeType` property.\n   */\n\n  /**\n   * Type of Element, HTMLElement and ReactNativeElement instances.\n   */\n  static ELEMENT_NODE: number = 1;\n  /**\n   * Currently Unused in React Native.\n   */\n  static ATTRIBUTE_NODE: number = 2;\n  /**\n   * Text nodes.\n   */\n  static TEXT_NODE: number = 3;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static CDATA_SECTION_NODE: number = 4;\n  /**\n   * @deprecated\n   */\n  static ENTITY_REFERENCE_NODE: number = 5;\n  /**\n   * @deprecated\n   */\n  static ENTITY_NODE: number = 6;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static PROCESSING_INSTRUCTION_NODE: number = 7;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static COMMENT_NODE: number = 8;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_NODE: number = 9;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_TYPE_NODE: number = 10;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_FRAGMENT_NODE: number = 11;\n  /**\n   * @deprecated\n   */\n  static NOTATION_NODE: number = 12;\n\n  /*\n   * Document position flags. Used to check the return value of\n   * `compareDocumentPosition()`.\n   */\n\n  /**\n   * Both nodes are in different documents.\n   */\n  static DOCUMENT_POSITION_DISCONNECTED: number = 1;\n  /**\n   * `otherNode` precedes the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as an ancestor or previous sibling or a descendant of a previous sibling or previous sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_PRECEDING: number = 2;\n  /**\n   * `otherNode` follows the node in either a pre-order depth-first traversal of a tree containing both\n   * (e.g., as a descendant or following sibling or a descendant of a following sibling or following sibling of an ancestor)\n   * or (if they are disconnected) in an arbitrary but consistent ordering.\n   */\n  static DOCUMENT_POSITION_FOLLOWING: number = 4;\n  /**\n   * `otherNode` is an ancestor of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINS: number = 8;\n  /**\n   * `otherNode` is a descendant of the node.\n   */\n  static DOCUMENT_POSITION_CONTAINED_BY: number = 16;\n  /**\n   * @deprecated Unused in React Native.\n   */\n  static DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: number = 32;\n}\n\nconst INSTANCE_HANDLE_KEY = Symbol('internalInstanceHandle');\n\nexport function getInstanceHandle(node: ReadOnlyNode): InternalInstanceHandle {\n  // $FlowExpectedError[prop-missing]\n  return node[INSTANCE_HANDLE_KEY];\n}\n\nfunction setInstanceHandle(\n  node: ReadOnlyNode,\n  instanceHandle: InternalInstanceHandle,\n): void {\n  // $FlowExpectedError[prop-missing]\n  node[INSTANCE_HANDLE_KEY] = instanceHandle;\n}\n\nexport function getShadowNode(node: ReadOnlyNode): ?ShadowNode {\n  return ReactFabric.getNodeFromInternalInstanceHandle(getInstanceHandle(node));\n}\n\nexport function getChildNodes(\n  node: ReadOnlyNode,\n): $ReadOnlyArray<ReadOnlyNode> {\n  const shadowNode = getShadowNode(node);\n\n  if (shadowNode == null) {\n    return [];\n  }\n\n  const childNodeInstanceHandles = nullthrows(\n    getFabricUIManager(),\n  ).getChildNodes(shadowNode);\n  return childNodeInstanceHandles.map(instanceHandle =>\n    getPublicInstanceFromInternalInstanceHandle(instanceHandle),\n  );\n}\n\nfunction getNodeSiblingsAndPosition(\n  node: ReadOnlyNode,\n): [$ReadOnlyArray<ReadOnlyNode>, number] {\n  const parent = node.parentNode;\n  if (parent == null) {\n    // This node is the root or it's disconnected.\n    return [[node], 0];\n  }\n\n  const siblings = getChildNodes(parent);\n  const position = siblings.indexOf(node);\n\n  if (position === -1) {\n    throw new TypeError(\"Missing node in parent's child node list\");\n  }\n\n  return [siblings, position];\n}\n\nexport function getPublicInstanceFromInternalInstanceHandle(\n  instanceHandle: InternalInstanceHandle,\n): ReadOnlyNode {\n  const mixedPublicInstance =\n    ReactFabric.getPublicInstanceFromInternalInstanceHandle(instanceHandle);\n  // $FlowExpectedError[incompatible-return] React defines public instances as \"mixed\" because it can't access the definition from React Native.\n  return mixedPublicInstance;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}