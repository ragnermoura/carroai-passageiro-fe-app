{"ast":null,"code":"'use strict';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\nvar _jsxFileName = \"C:\\\\Users\\\\dudug\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\projetos-reactnative\\\\carroai-passageiro-fe-app\\\\node_modules\\\\react-native\\\\Libraries\\\\Inspector\\\\NetworkOverlay.js\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nvar ScrollView = require('../Components/ScrollView/ScrollView');\nvar TouchableHighlight = require('../Components/Touchable/TouchableHighlight');\nvar View = require('../Components/View/View');\nvar FlatList = require('../Lists/FlatList');\nvar XHRInterceptor = require('../Network/XHRInterceptor');\nvar StyleSheet = require('../StyleSheet/StyleSheet');\nvar Text = require('../Text/Text');\nvar WebSocketInterceptor = require('../WebSocket/WebSocketInterceptor');\nvar React = require('react');\nvar LISTVIEW_CELL_HEIGHT = 15;\nvar nextXHRId = 0;\nfunction getStringByValue(value) {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  if (typeof value === 'string' && value.length > 500) {\n    return String(value).slice(0, 500).concat('\\n***TRUNCATED TO 500 CHARACTERS***');\n  }\n  return value;\n}\nfunction getTypeShortName(type) {\n  if (type === 'XMLHttpRequest') {\n    return 'XHR';\n  } else if (type === 'WebSocket') {\n    return 'WS';\n  }\n  return '';\n}\nfunction keyExtractor(request) {\n  return String(request.id);\n}\nvar NetworkOverlay = function (_React$Component) {\n  function NetworkOverlay() {\n    var _this;\n    _classCallCheck(this, NetworkOverlay);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _callSuper(this, NetworkOverlay, [].concat(args));\n    _this._requestsListViewScrollMetrics = {\n      offset: 0,\n      visibleLength: 0,\n      contentLength: 0\n    };\n    _this._socketIdMap = {};\n    _this._xhrIdMap = {};\n    _this.state = {\n      detailRowId: null,\n      requests: []\n    };\n    _this._renderItem = function (_ref) {\n      var item = _ref.item,\n        index = _ref.index;\n      var tableRowViewStyle = [styles.tableRow, index % 2 === 1 ? styles.tableRowOdd : styles.tableRowEven, index === _this.state.detailRowId && styles.tableRowPressed];\n      var urlCellViewStyle = styles.urlCellView;\n      var methodCellViewStyle = styles.methodCellView;\n      return _reactJsxDevRuntime.jsxDEV(TouchableHighlight, {\n        onPress: function onPress() {\n          _this._pressRow(index);\n        },\n        children: _reactJsxDevRuntime.jsxDEV(View, {\n          children: _reactJsxDevRuntime.jsxDEV(View, {\n            style: tableRowViewStyle,\n            children: [_reactJsxDevRuntime.jsxDEV(View, {\n              style: urlCellViewStyle,\n              children: _reactJsxDevRuntime.jsxDEV(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: item.url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 13\n            }, _this), _reactJsxDevRuntime.jsxDEV(View, {\n              style: methodCellViewStyle,\n              children: _reactJsxDevRuntime.jsxDEV(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: getTypeShortName(item.type)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 13\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 11\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 7\n      }, _this);\n    };\n    _this._indicateAdditionalRequests = function () {\n      if (_this._requestsListView) {\n        var distanceFromEndThreshold = LISTVIEW_CELL_HEIGHT * 2;\n        var _this$_requestsListVi = _this._requestsListViewScrollMetrics,\n          offset = _this$_requestsListVi.offset,\n          visibleLength = _this$_requestsListVi.visibleLength,\n          contentLength = _this$_requestsListVi.contentLength;\n        var distanceFromEnd = contentLength - visibleLength - offset;\n        var isCloseToEnd = distanceFromEnd <= distanceFromEndThreshold;\n        if (isCloseToEnd) {\n          _this._requestsListView.scrollToEnd();\n        } else {\n          _this._requestsListView.flashScrollIndicators();\n        }\n      }\n    };\n    _this._captureRequestsListView = function (listRef) {\n      _this._requestsListView = listRef;\n    };\n    _this._requestsListViewOnScroll = function (e) {\n      _this._requestsListViewScrollMetrics.offset = e.nativeEvent.contentOffset.y;\n      _this._requestsListViewScrollMetrics.visibleLength = e.nativeEvent.layoutMeasurement.height;\n      _this._requestsListViewScrollMetrics.contentLength = e.nativeEvent.contentSize.height;\n    };\n    _this._scrollDetailToTop = function () {\n      if (_this._detailScrollView) {\n        _this._detailScrollView.scrollTo({\n          y: 0,\n          animated: false\n        });\n      }\n    };\n    _this._closeButtonClicked = function () {\n      _this.setState({\n        detailRowId: null\n      });\n    };\n    return _this;\n  }\n  _inherits(NetworkOverlay, _React$Component);\n  return _createClass(NetworkOverlay, [{\n    key: \"_enableXHRInterception\",\n    value: function _enableXHRInterception() {\n      var _this2 = this;\n      if (XHRInterceptor.isInterceptorEnabled()) {\n        return;\n      }\n      XHRInterceptor.setOpenCallback(function (method, url, xhr) {\n        xhr._index = nextXHRId++;\n        var xhrIndex = _this2.state.requests.length;\n        _this2._xhrIdMap[xhr._index] = xhrIndex;\n        var _xhr = {\n          id: xhrIndex,\n          type: 'XMLHttpRequest',\n          method: method,\n          url: url\n        };\n        _this2.setState({\n          requests: _this2.state.requests.concat(_xhr)\n        }, _this2._indicateAdditionalRequests);\n      });\n      XHRInterceptor.setRequestHeaderCallback(function (header, value, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref2) {\n          var requests = _ref2.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          if (!networkRequestInfo.requestHeaders) {\n            networkRequestInfo.requestHeaders = {};\n          }\n          networkRequestInfo.requestHeaders[header] = value;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setSendCallback(function (data, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref3) {\n          var requests = _ref3.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.dataSent = data;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setHeaderReceivedCallback(function (type, size, responseHeaders, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref4) {\n          var requests = _ref4.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.responseContentType = type;\n          networkRequestInfo.responseSize = size;\n          networkRequestInfo.responseHeaders = responseHeaders;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.setResponseCallback(function (status, timeout, response, responseURL, responseType, xhr) {\n        var xhrIndex = _this2._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n        _this2.setState(function (_ref5) {\n          var requests = _ref5.requests;\n          var networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.status = status;\n          networkRequestInfo.timeout = timeout;\n          networkRequestInfo.response = response;\n          networkRequestInfo.responseURL = responseURL;\n          networkRequestInfo.responseType = responseType;\n          return {\n            requests: requests\n          };\n        });\n      });\n      XHRInterceptor.enableInterception();\n    }\n  }, {\n    key: \"_enableWebSocketInterception\",\n    value: function _enableWebSocketInterception() {\n      var _this3 = this;\n      if (WebSocketInterceptor.isInterceptorEnabled()) {\n        return;\n      }\n      WebSocketInterceptor.setConnectCallback(function (url, protocols, options, socketId) {\n        var socketIndex = _this3.state.requests.length;\n        _this3._socketIdMap[socketId] = socketIndex;\n        var _webSocket = {\n          id: socketIndex,\n          type: 'WebSocket',\n          url: url,\n          protocols: protocols\n        };\n        _this3.setState({\n          requests: _this3.state.requests.concat(_webSocket)\n        }, _this3._indicateAdditionalRequests);\n      });\n      WebSocketInterceptor.setCloseCallback(function (statusCode, closeReason, socketId) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        if (statusCode !== null && closeReason !== null) {\n          _this3.setState(function (_ref6) {\n            var requests = _ref6.requests;\n            var networkRequestInfo = requests[socketIndex];\n            networkRequestInfo.status = statusCode;\n            networkRequestInfo.closeReason = closeReason;\n            return {\n              requests: requests\n            };\n          });\n        }\n      });\n      WebSocketInterceptor.setSendCallback(function (data, socketId) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref7) {\n          var requests = _ref7.requests;\n          var networkRequestInfo = requests[socketIndex];\n          if (!networkRequestInfo.messages) {\n            networkRequestInfo.messages = '';\n          }\n          networkRequestInfo.messages += 'Sent: ' + JSON.stringify(data) + '\\n';\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnMessageCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref8) {\n          var requests = _ref8.requests;\n          var networkRequestInfo = requests[socketIndex];\n          if (!networkRequestInfo.messages) {\n            networkRequestInfo.messages = '';\n          }\n          networkRequestInfo.messages += 'Received: ' + JSON.stringify(message) + '\\n';\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnCloseCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref9) {\n          var requests = _ref9.requests;\n          var networkRequestInfo = requests[socketIndex];\n          networkRequestInfo.serverClose = message;\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.setOnErrorCallback(function (socketId, message) {\n        var socketIndex = _this3._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        _this3.setState(function (_ref10) {\n          var requests = _ref10.requests;\n          var networkRequestInfo = requests[socketIndex];\n          networkRequestInfo.serverError = message;\n          return {\n            requests: requests\n          };\n        });\n      });\n      WebSocketInterceptor.enableInterception();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._enableXHRInterception();\n      this._enableWebSocketInterception();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      XHRInterceptor.disableInterception();\n      WebSocketInterceptor.disableInterception();\n    }\n  }, {\n    key: \"_renderItemDetail\",\n    value: function _renderItemDetail(id) {\n      var _this4 = this;\n      var requestItem = this.state.requests[id];\n      var details = Object.keys(requestItem).map(function (key) {\n        if (key === 'id') {\n          return;\n        }\n        return _reactJsxDevRuntime.jsxDEV(View, {\n          style: styles.detailViewRow,\n          children: [_reactJsxDevRuntime.jsxDEV(Text, {\n            style: [styles.detailViewText, styles.detailKeyCellView],\n            children: key\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 11\n          }, _this4), _reactJsxDevRuntime.jsxDEV(Text, {\n            style: [styles.detailViewText, styles.detailValueCellView],\n            children: getStringByValue(requestItem[key])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 11\n          }, _this4)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 9\n        }, _this4);\n      });\n      return _reactJsxDevRuntime.jsxDEV(View, {\n        children: [_reactJsxDevRuntime.jsxDEV(TouchableHighlight, {\n          style: styles.closeButton,\n          onPress: this._closeButtonClicked,\n          children: _reactJsxDevRuntime.jsxDEV(View, {\n            children: _reactJsxDevRuntime.jsxDEV(Text, {\n              style: styles.closeButtonText,\n              children: \"v\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 9\n        }, this), _reactJsxDevRuntime.jsxDEV(ScrollView, {\n          style: styles.detailScrollView,\n          ref: function ref(scrollRef) {\n            return _this4._detailScrollView = scrollRef;\n          },\n          children: details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 7\n      }, this);\n    }\n  }, {\n    key: \"_pressRow\",\n    value: function _pressRow(rowId) {\n      this.setState({\n        detailRowId: rowId\n      }, this._scrollDetailToTop);\n    }\n  }, {\n    key: \"_getRequestIndexByXHRID\",\n    value: function _getRequestIndexByXHRID(index) {\n      if (index === undefined) {\n        return -1;\n      }\n      var xhrIndex = this._xhrIdMap[index];\n      if (xhrIndex === undefined) {\n        return -1;\n      } else {\n        return xhrIndex;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        requests = _this$state.requests,\n        detailRowId = _this$state.detailRowId;\n      return _reactJsxDevRuntime.jsxDEV(View, {\n        style: styles.container,\n        children: [detailRowId != null && this._renderItemDetail(detailRowId), _reactJsxDevRuntime.jsxDEV(View, {\n          style: styles.listViewTitle,\n          children: requests.length > 0 && _reactJsxDevRuntime.jsxDEV(View, {\n            style: styles.tableRow,\n            children: [_reactJsxDevRuntime.jsxDEV(View, {\n              style: styles.urlTitleCellView,\n              children: _reactJsxDevRuntime.jsxDEV(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: \"URL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), _reactJsxDevRuntime.jsxDEV(View, {\n              style: styles.methodTitleCellView,\n              children: _reactJsxDevRuntime.jsxDEV(Text, {\n                style: styles.cellText,\n                numberOfLines: 1,\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 9\n        }, this), _reactJsxDevRuntime.jsxDEV(FlatList, {\n          ref: this._captureRequestsListView,\n          onScroll: this._requestsListViewOnScroll,\n          style: styles.listView,\n          data: requests,\n          renderItem: this._renderItem,\n          keyExtractor: keyExtractor,\n          extraData: this.state\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 5\n  },\n  listViewTitle: {\n    height: 20\n  },\n  listView: {\n    flex: 1,\n    height: 60\n  },\n  tableRow: {\n    flexDirection: 'row',\n    flex: 1,\n    height: LISTVIEW_CELL_HEIGHT\n  },\n  tableRowEven: {\n    backgroundColor: '#555'\n  },\n  tableRowOdd: {\n    backgroundColor: '#000'\n  },\n  tableRowPressed: {\n    backgroundColor: '#3B5998'\n  },\n  cellText: {\n    color: 'white',\n    fontSize: 12\n  },\n  methodTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 1\n  },\n  urlTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 5,\n    paddingLeft: 3\n  },\n  methodCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1\n  },\n  urlCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    flex: 5,\n    paddingLeft: 3\n  },\n  detailScrollView: {\n    flex: 1,\n    height: 180,\n    marginTop: 5,\n    marginBottom: 5\n  },\n  detailKeyCellView: {\n    flex: 1.3\n  },\n  detailValueCellView: {\n    flex: 2\n  },\n  detailViewRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 3\n  },\n  detailViewText: {\n    color: 'white',\n    fontSize: 11\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 10\n  },\n  closeButton: {\n    marginTop: 5,\n    backgroundColor: '#888',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});\nmodule.exports = NetworkOverlay;","map":{"version":3,"names":["_reactJsxDevRuntime","require","_classCallCheck","_createClass","_possibleConstructorReturn","_getPrototypeOf","_inherits","_jsxFileName","_callSuper","t","o","e","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","ScrollView","TouchableHighlight","View","FlatList","XHRInterceptor","StyleSheet","Text","WebSocketInterceptor","React","LISTVIEW_CELL_HEIGHT","nextXHRId","getStringByValue","value","undefined","JSON","stringify","length","String","slice","concat","getTypeShortName","type","keyExtractor","request","id","NetworkOverlay","_React$Component","_this","_len","arguments","args","Array","_key","_requestsListViewScrollMetrics","offset","visibleLength","contentLength","_socketIdMap","_xhrIdMap","state","detailRowId","requests","_renderItem","_ref","item","index","tableRowViewStyle","styles","tableRow","tableRowOdd","tableRowEven","tableRowPressed","urlCellViewStyle","urlCellView","methodCellViewStyle","methodCellView","jsxDEV","onPress","_pressRow","children","style","cellText","numberOfLines","url","fileName","lineNumber","columnNumber","_indicateAdditionalRequests","_requestsListView","distanceFromEndThreshold","_this$_requestsListVi","distanceFromEnd","isCloseToEnd","scrollToEnd","flashScrollIndicators","_captureRequestsListView","listRef","_requestsListViewOnScroll","nativeEvent","contentOffset","y","layoutMeasurement","height","contentSize","_scrollDetailToTop","_detailScrollView","scrollTo","animated","_closeButtonClicked","setState","key","_enableXHRInterception","_this2","isInterceptorEnabled","setOpenCallback","method","xhr","_index","xhrIndex","_xhr","setRequestHeaderCallback","header","_getRequestIndexByXHRID","_ref2","networkRequestInfo","requestHeaders","setSendCallback","data","_ref3","dataSent","setHeaderReceivedCallback","size","responseHeaders","_ref4","responseContentType","responseSize","setResponseCallback","status","timeout","response","responseURL","responseType","_ref5","enableInterception","_enableWebSocketInterception","_this3","setConnectCallback","protocols","options","socketId","socketIndex","_webSocket","setCloseCallback","statusCode","closeReason","_ref6","_ref7","messages","setOnMessageCallback","message","_ref8","setOnCloseCallback","_ref9","serverClose","setOnErrorCallback","_ref10","serverError","componentDidMount","componentWillUnmount","disableInterception","_renderItemDetail","_this4","requestItem","details","Object","keys","map","detailViewRow","detailViewText","detailKeyCellView","detailValueCellView","closeButton","closeButtonText","detailScrollView","ref","scrollRef","rowId","render","_this$state","container","listViewTitle","urlTitleCellView","methodTitleCellView","onScroll","listView","renderItem","extraData","Component","create","paddingTop","paddingBottom","paddingLeft","paddingRight","flex","flexDirection","backgroundColor","color","fontSize","borderColor","borderTopWidth","borderBottomWidth","borderRightWidth","alignItems","justifyContent","borderLeftWidth","marginTop","marginBottom","paddingHorizontal","module","exports"],"sources":["C:/Users/dudug/OneDrive/Área de Trabalho/projetos-reactnative/carroai-passageiro-fe-app/node_modules/react-native/Libraries/Inspector/NetworkOverlay.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nimport type {RenderItemProps} from '@react-native/virtualized-lists';\n\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst TouchableHighlight = require('../Components/Touchable/TouchableHighlight');\nconst View = require('../Components/View/View');\nconst FlatList = require('../Lists/FlatList');\nconst XHRInterceptor = require('../Network/XHRInterceptor');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst Text = require('../Text/Text');\nconst WebSocketInterceptor = require('../WebSocket/WebSocketInterceptor');\nconst React = require('react');\n\nconst LISTVIEW_CELL_HEIGHT = 15;\n\n// Global id for the intercepted XMLHttpRequest objects.\nlet nextXHRId = 0;\n\ntype NetworkRequestInfo = {\n  id: number,\n  type?: string,\n  url?: string,\n  method?: string,\n  status?: number,\n  dataSent?: any,\n  responseContentType?: string,\n  responseSize?: number,\n  requestHeaders?: Object,\n  responseHeaders?: string,\n  response?: Object | string,\n  responseURL?: string,\n  responseType?: string,\n  timeout?: number,\n  closeReason?: string,\n  messages?: string,\n  serverClose?: Object,\n  serverError?: Object,\n  ...\n};\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  detailRowId: ?number,\n  requests: Array<NetworkRequestInfo>,\n|};\n\nfunction getStringByValue(value: any): string {\n  if (value === undefined) {\n    return 'undefined';\n  }\n  if (typeof value === 'object') {\n    return JSON.stringify(value);\n  }\n  if (typeof value === 'string' && value.length > 500) {\n    return String(value)\n      .slice(0, 500)\n      .concat('\\n***TRUNCATED TO 500 CHARACTERS***');\n  }\n  return value;\n}\n\nfunction getTypeShortName(type: any): string {\n  if (type === 'XMLHttpRequest') {\n    return 'XHR';\n  } else if (type === 'WebSocket') {\n    return 'WS';\n  }\n\n  return '';\n}\n\nfunction keyExtractor(request: NetworkRequestInfo): string {\n  return String(request.id);\n}\n\n/**\n * Show all the intercepted network requests over the InspectorPanel.\n */\nclass NetworkOverlay extends React.Component<Props, State> {\n  _requestsListView: ?React.ElementRef<Class<FlatList<NetworkRequestInfo>>>;\n  _detailScrollView: ?React.ElementRef<typeof ScrollView>;\n\n  // Metrics are used to decide when if the request list should be sticky, and\n  // scroll to the bottom as new network requests come in, or if the user has\n  // intentionally scrolled away from the bottom - to instead flash the scroll bar\n  // and keep the current position\n  _requestsListViewScrollMetrics: {\n    contentLength: number,\n    offset: number,\n    visibleLength: number,\n  } = {\n    offset: 0,\n    visibleLength: 0,\n    contentLength: 0,\n  };\n\n  // Map of `socketId` -> `index in `this.state.requests`.\n  _socketIdMap: {[string]: number} = {};\n  // Map of `xhr._index` -> `index in `this.state.requests`.\n  _xhrIdMap: {[key: number]: number, ...} = {};\n\n  state: State = {\n    detailRowId: null,\n    requests: [],\n  };\n\n  _enableXHRInterception(): void {\n    if (XHRInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the XHR request item in listView as soon as it was opened.\n    XHRInterceptor.setOpenCallback((method, url, xhr) => {\n      // Generate a global id for each intercepted xhr object, add this id\n      // to the xhr object as a private `_index` property to identify it,\n      // so that we can distinguish different xhr objects in callbacks.\n      xhr._index = nextXHRId++;\n      const xhrIndex = this.state.requests.length;\n      this._xhrIdMap[xhr._index] = xhrIndex;\n\n      const _xhr: NetworkRequestInfo = {\n        id: xhrIndex,\n        type: 'XMLHttpRequest',\n        method: method,\n        url: url,\n      };\n      this.setState(\n        {\n          requests: this.state.requests.concat(_xhr),\n        },\n        this._indicateAdditionalRequests,\n      );\n    });\n\n    XHRInterceptor.setRequestHeaderCallback((header, value, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        if (!networkRequestInfo.requestHeaders) {\n          networkRequestInfo.requestHeaders = ({}: {[any]: any});\n        }\n        networkRequestInfo.requestHeaders[header] = value;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setSendCallback((data, xhr) => {\n      const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n      if (xhrIndex === -1) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[xhrIndex];\n        networkRequestInfo.dataSent = data;\n        return {requests};\n      });\n    });\n\n    XHRInterceptor.setHeaderReceivedCallback(\n      (type, size, responseHeaders, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.responseContentType = type;\n          networkRequestInfo.responseSize = size;\n          networkRequestInfo.responseHeaders = responseHeaders;\n          return {requests};\n        });\n      },\n    );\n\n    XHRInterceptor.setResponseCallback(\n      (status, timeout, response, responseURL, responseType, xhr) => {\n        const xhrIndex = this._getRequestIndexByXHRID(xhr._index);\n        if (xhrIndex === -1) {\n          return;\n        }\n\n        this.setState(({requests}) => {\n          const networkRequestInfo = requests[xhrIndex];\n          networkRequestInfo.status = status;\n          networkRequestInfo.timeout = timeout;\n          networkRequestInfo.response = response;\n          networkRequestInfo.responseURL = responseURL;\n          networkRequestInfo.responseType = responseType;\n\n          return {requests};\n        });\n      },\n    );\n\n    // Fire above callbacks.\n    XHRInterceptor.enableInterception();\n  }\n\n  _enableWebSocketInterception(): void {\n    if (WebSocketInterceptor.isInterceptorEnabled()) {\n      return;\n    }\n    // Show the WebSocket request item in listView when 'connect' is called.\n    WebSocketInterceptor.setConnectCallback(\n      (url, protocols, options, socketId) => {\n        const socketIndex = this.state.requests.length;\n        this._socketIdMap[socketId] = socketIndex;\n        const _webSocket: NetworkRequestInfo = {\n          id: socketIndex,\n          type: 'WebSocket',\n          url: url,\n          protocols: protocols,\n        };\n        this.setState(\n          {\n            requests: this.state.requests.concat(_webSocket),\n          },\n          this._indicateAdditionalRequests,\n        );\n      },\n    );\n\n    WebSocketInterceptor.setCloseCallback(\n      (statusCode, closeReason, socketId) => {\n        const socketIndex = this._socketIdMap[socketId];\n        if (socketIndex === undefined) {\n          return;\n        }\n        if (statusCode !== null && closeReason !== null) {\n          this.setState(({requests}) => {\n            const networkRequestInfo = requests[socketIndex];\n            networkRequestInfo.status = statusCode;\n            networkRequestInfo.closeReason = closeReason;\n            return {requests};\n          });\n        }\n      },\n    );\n\n    WebSocketInterceptor.setSendCallback((data, socketId) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages += 'Sent: ' + JSON.stringify(data) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnMessageCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n\n        if (!networkRequestInfo.messages) {\n          networkRequestInfo.messages = '';\n        }\n        networkRequestInfo.messages +=\n          'Received: ' + JSON.stringify(message) + '\\n';\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnCloseCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverClose = message;\n\n        return {requests};\n      });\n    });\n\n    WebSocketInterceptor.setOnErrorCallback((socketId, message) => {\n      const socketIndex = this._socketIdMap[socketId];\n      if (socketIndex === undefined) {\n        return;\n      }\n\n      this.setState(({requests}) => {\n        const networkRequestInfo = requests[socketIndex];\n        networkRequestInfo.serverError = message;\n\n        return {requests};\n      });\n    });\n\n    // Fire above callbacks.\n    WebSocketInterceptor.enableInterception();\n  }\n\n  componentDidMount() {\n    this._enableXHRInterception();\n    this._enableWebSocketInterception();\n  }\n\n  componentWillUnmount() {\n    XHRInterceptor.disableInterception();\n    WebSocketInterceptor.disableInterception();\n  }\n\n  _renderItem = ({\n    item,\n    index,\n  }: RenderItemProps<NetworkRequestInfo>): React.Element<any> => {\n    const tableRowViewStyle = [\n      styles.tableRow,\n      index % 2 === 1 ? styles.tableRowOdd : styles.tableRowEven,\n      index === this.state.detailRowId && styles.tableRowPressed,\n    ];\n    const urlCellViewStyle = styles.urlCellView;\n    const methodCellViewStyle = styles.methodCellView;\n\n    return (\n      <TouchableHighlight\n        onPress={() => {\n          this._pressRow(index);\n        }}>\n        <View>\n          <View style={tableRowViewStyle}>\n            <View style={urlCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {item.url}\n              </Text>\n            </View>\n            <View style={methodCellViewStyle}>\n              <Text style={styles.cellText} numberOfLines={1}>\n                {getTypeShortName(item.type)}\n              </Text>\n            </View>\n          </View>\n        </View>\n      </TouchableHighlight>\n    );\n  };\n\n  _renderItemDetail(id: number): React.Node {\n    const requestItem = this.state.requests[id];\n    const details = Object.keys(requestItem).map(key => {\n      if (key === 'id') {\n        return;\n      }\n      return (\n        <View style={styles.detailViewRow} key={key}>\n          <Text style={[styles.detailViewText, styles.detailKeyCellView]}>\n            {key}\n          </Text>\n          <Text style={[styles.detailViewText, styles.detailValueCellView]}>\n            {getStringByValue(requestItem[key])}\n          </Text>\n        </View>\n      );\n    });\n\n    return (\n      <View>\n        <TouchableHighlight\n          style={styles.closeButton}\n          onPress={this._closeButtonClicked}>\n          <View>\n            <Text style={styles.closeButtonText}>v</Text>\n          </View>\n        </TouchableHighlight>\n        <ScrollView\n          style={styles.detailScrollView}\n          ref={scrollRef => (this._detailScrollView = scrollRef)}>\n          {details}\n        </ScrollView>\n      </View>\n    );\n  }\n\n  _indicateAdditionalRequests = (): void => {\n    if (this._requestsListView) {\n      const distanceFromEndThreshold = LISTVIEW_CELL_HEIGHT * 2;\n      const {offset, visibleLength, contentLength} =\n        this._requestsListViewScrollMetrics;\n      const distanceFromEnd = contentLength - visibleLength - offset;\n      const isCloseToEnd = distanceFromEnd <= distanceFromEndThreshold;\n      if (isCloseToEnd) {\n        this._requestsListView.scrollToEnd();\n      } else {\n        this._requestsListView.flashScrollIndicators();\n      }\n    }\n  };\n\n  _captureRequestsListView = (listRef: ?FlatList<NetworkRequestInfo>): void => {\n    this._requestsListView = listRef;\n  };\n\n  _requestsListViewOnScroll = (e: Object): void => {\n    this._requestsListViewScrollMetrics.offset = e.nativeEvent.contentOffset.y;\n    this._requestsListViewScrollMetrics.visibleLength =\n      e.nativeEvent.layoutMeasurement.height;\n    this._requestsListViewScrollMetrics.contentLength =\n      e.nativeEvent.contentSize.height;\n  };\n\n  /**\n   * Popup a scrollView to dynamically show detailed information of\n   * the request, when pressing a row in the network flow listView.\n   */\n  _pressRow(rowId: number): void {\n    this.setState({detailRowId: rowId}, this._scrollDetailToTop);\n  }\n\n  _scrollDetailToTop = (): void => {\n    if (this._detailScrollView) {\n      this._detailScrollView.scrollTo({\n        y: 0,\n        animated: false,\n      });\n    }\n  };\n\n  _closeButtonClicked = () => {\n    this.setState({detailRowId: null});\n  };\n\n  _getRequestIndexByXHRID(index: number): number {\n    if (index === undefined) {\n      return -1;\n    }\n    const xhrIndex = this._xhrIdMap[index];\n    if (xhrIndex === undefined) {\n      return -1;\n    } else {\n      return xhrIndex;\n    }\n  }\n\n  render(): React.Node {\n    const {requests, detailRowId} = this.state;\n\n    return (\n      <View style={styles.container}>\n        {detailRowId != null && this._renderItemDetail(detailRowId)}\n        <View style={styles.listViewTitle}>\n          {requests.length > 0 && (\n            <View style={styles.tableRow}>\n              <View style={styles.urlTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  URL\n                </Text>\n              </View>\n              <View style={styles.methodTitleCellView}>\n                <Text style={styles.cellText} numberOfLines={1}>\n                  Type\n                </Text>\n              </View>\n            </View>\n          )}\n        </View>\n\n        <FlatList\n          ref={this._captureRequestsListView}\n          onScroll={this._requestsListViewOnScroll}\n          style={styles.listView}\n          data={requests}\n          renderItem={this._renderItem}\n          keyExtractor={keyExtractor}\n          extraData={this.state}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingLeft: 5,\n    paddingRight: 5,\n  },\n  listViewTitle: {\n    height: 20,\n  },\n  listView: {\n    flex: 1,\n    height: 60,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    flex: 1,\n    height: LISTVIEW_CELL_HEIGHT,\n  },\n  tableRowEven: {\n    backgroundColor: '#555',\n  },\n  tableRowOdd: {\n    backgroundColor: '#000',\n  },\n  tableRowPressed: {\n    backgroundColor: '#3B5998',\n  },\n  cellText: {\n    color: 'white',\n    fontSize: 12,\n  },\n  methodTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 1,\n  },\n  urlTitleCellView: {\n    height: 18,\n    borderColor: '#DCD7CD',\n    borderTopWidth: 1,\n    borderBottomWidth: 1,\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    backgroundColor: '#444',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  methodCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderRightWidth: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    flex: 1,\n  },\n  urlCellView: {\n    height: 15,\n    borderColor: '#DCD7CD',\n    borderLeftWidth: 1,\n    borderRightWidth: 1,\n    justifyContent: 'center',\n    flex: 5,\n    paddingLeft: 3,\n  },\n  detailScrollView: {\n    flex: 1,\n    height: 180,\n    marginTop: 5,\n    marginBottom: 5,\n  },\n  detailKeyCellView: {\n    flex: 1.3,\n  },\n  detailValueCellView: {\n    flex: 2,\n  },\n  detailViewRow: {\n    flexDirection: 'row',\n    paddingHorizontal: 3,\n  },\n  detailViewText: {\n    color: 'white',\n    fontSize: 11,\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: 10,\n  },\n  closeButton: {\n    marginTop: 5,\n    backgroundColor: '#888',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nmodule.exports = NetworkOverlay;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}